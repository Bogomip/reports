{"ast":null,"code":"import { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/utilities/authentication/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/reports.service\";\nimport * as i4 from \"src/app/services/groups.service\";\nimport * as i5 from \"src/app/services/templates.service\";\nimport * as i6 from \"src/app/services/sentences.service\";\nimport * as i7 from \"src/app/services/tests.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"../../utilities/loading-spinner/loading-spinner.component\";\n\nfunction EditReportComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const temp_r15 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"value\", temp_r15.id);\n    i0.ɵɵproperty(\"selected\", ctx_r1.report.templateId === temp_r15.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(temp_r15.name);\n  }\n}\n\nfunction EditReportComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"input\", 34);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_div_24_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const grp_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.selectGroup(grp_r17.id, $event.target.checked);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 35);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const grp_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"groupToAdd--\", grp_r17.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"groupToAdd--\", grp_r17.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(grp_r17.name);\n  }\n}\n\nfunction EditReportComponent_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_button_29_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.saveToDatabase();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r3.isSaving);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.isSaving ? \"Saving...\" : \"Save Report Set\");\n  }\n}\n\nfunction EditReportComponent_button_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_button_30_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.updateReport();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r4.unsavedChanges || ctx_r4.isUpdating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.isUpdating ? \"Updating...\" : \"Save changes\");\n  }\n}\n\nfunction EditReportComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 38);\n  }\n}\n\nfunction EditReportComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 38);\n  }\n}\n\nfunction EditReportComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" These values are individualised to each user. Select the column that matches the data needed for each variable. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" These values will apply to all the generated reports. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1, \" These values are used the test whether sentence stems apply to each user in turn. Select the column that matches the data needed for each variable. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_div_41_div_1_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r29 = ctx.$implicit;\n    const variable_r26 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r29);\n    i0.ɵɵproperty(\"selected\", variable_r26.identifier === option_r29)(\"selected\", option_r29 === variable_r26.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r29);\n  }\n}\n\nfunction EditReportComponent_div_41_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelementStart(1, \"div\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 44);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_div_41_div_1_Template_select_change_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const variable_r26 = restoredCtx.$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.assignVariableColumn($event.target.value, variable_r26.identifier);\n    });\n    i0.ɵɵelement(4, \"option\", 45);\n    i0.ɵɵelementStart(5, \"option\", 46);\n    i0.ɵɵtext(6, \"* Add column *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, EditReportComponent_div_41_div_1_option_7_Template, 2, 4, \"option\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const variable_r26 = ctx.$implicit;\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", variable_r26.identifier, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"Select the column from your data that will be the source for the '\", variable_r26.identifier, \"' data.\");\n    i0.ɵɵproperty(\"disabled\", ctx_r25.checkVariableAssignment(variable_r26.identifier));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selected\", variable_r26.key === \"\" || variable_r26.key === undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", variable_r26.identifier);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r25.report.keys);\n  }\n}\n\nfunction EditReportComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtemplate(1, EditReportComponent_div_41_div_1_Template, 8, 6, \"div\", 41);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.report.variables);\n  }\n}\n\nfunction EditReportComponent_div_42_div_1_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 50);\n    i0.ɵɵlistener(\"blur\", function EditReportComponent_div_42_div_1_input_3_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const variable_r35 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext(2);\n      return ctx_r40.assignGlobalValue(variable_r35.identifier, $event.target.value);\n    })(\"keyup.enter\", function EditReportComponent_div_42_div_1_input_3_Template_input_keyup_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const variable_r35 = i0.ɵɵnextContext().$implicit;\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return ctx_r43.assignGlobalValue(variable_r35.identifier, $event.target.value);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const variable_r35 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", variable_r35.value);\n  }\n}\n\nfunction EditReportComponent_div_42_div_1_select_4_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r47 = ctx.$implicit;\n    const variable_r35 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r47);\n    i0.ɵɵproperty(\"selected\", option_r47 === variable_r35.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r47);\n  }\n}\n\nfunction EditReportComponent_div_42_div_1_select_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 51);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_div_42_div_1_select_4_Template_select_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const variable_r35 = i0.ɵɵnextContext().$implicit;\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return ctx_r50.assignGlobalValue(variable_r35.identifier, $event.target.value);\n    });\n    i0.ɵɵelement(1, \"option\", 45);\n    i0.ɵɵelementStart(2, \"option\", 52);\n    i0.ɵɵtext(3, \"* Add new option *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EditReportComponent_div_42_div_1_select_4_option_4_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const variable_r35 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selected\", variable_r35.value === \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", variable_r35.options);\n  }\n}\n\nfunction EditReportComponent_div_42_div_1_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 53);\n    i0.ɵɵlistener(\"blur\", function EditReportComponent_div_42_div_1_input_5_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r56);\n      const variable_r35 = i0.ɵɵnextContext().$implicit;\n      const ctx_r54 = i0.ɵɵnextContext(2);\n      return ctx_r54.addGlobalOption(variable_r35.identifier, $event.target.value);\n    })(\"keyup.enter\", function EditReportComponent_div_42_div_1_input_5_Template_input_keyup_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r56);\n      const variable_r35 = i0.ɵɵnextContext().$implicit;\n      const ctx_r57 = i0.ɵɵnextContext(2);\n      return ctx_r57.addGlobalOption(variable_r35.identifier, $event.target.value);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelementStart(1, \"div\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, EditReportComponent_div_42_div_1_input_3_Template, 1, 1, \"input\", 47);\n    i0.ɵɵtemplate(4, EditReportComponent_div_42_div_1_select_4_Template, 5, 2, \"select\", 48);\n    i0.ɵɵtemplate(5, EditReportComponent_div_42_div_1_input_5_Template, 1, 0, \"input\", 49);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const variable_r35 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", variable_r35.identifier, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", variable_r35.options.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", variable_r35.options.length > 0 && variable_r35.options[variable_r35.options.length - 1] !== \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", variable_r35.options[variable_r35.options.length - 1] === \"\");\n  }\n}\n\nfunction EditReportComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtemplate(1, EditReportComponent_div_42_div_1_Template, 6, 4, \"div\", 41);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r11.report.globals);\n  }\n}\n\nfunction EditReportComponent_div_43_div_1_div_4_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r65 = ctx.$implicit;\n    const test_r60 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", opt_r65.name);\n    i0.ɵɵproperty(\"selected\", test_r60.settings.value.name === opt_r65.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(opt_r65.name);\n  }\n}\n\nfunction EditReportComponent_div_43_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r70 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵelementStart(1, \"select\", 51);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_div_43_div_1_div_4_Template_select_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r70);\n      const test_r60 = i0.ɵɵnextContext().$implicit;\n      const ctx_r68 = i0.ɵɵnextContext(2);\n      return ctx_r68.testSettingsChange(test_r60.identifier, $event.target.value);\n    });\n    i0.ɵɵelementStart(2, \"option\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EditReportComponent_div_43_div_1_div_4_option_4_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const test_r60 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Select a \", test_r60.settings.name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", test_r60.settings.options);\n  }\n}\n\nfunction EditReportComponent_div_43_div_1_div_5_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r75 = ctx.$implicit;\n    const subTestVariable_r72 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r75);\n    i0.ɵɵproperty(\"selected\", subTestVariable_r72.key === option_r75);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r75);\n  }\n}\n\nfunction EditReportComponent_div_43_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r79 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 58);\n    i0.ɵɵelementStart(1, \"div\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 57);\n    i0.ɵɵelementStart(4, \"select\", 59);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_div_43_div_1_div_5_Template_select_change_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r79);\n      const subTestVariable_r72 = restoredCtx.$implicit;\n      const test_r60 = i0.ɵɵnextContext().$implicit;\n      const ctx_r78 = i0.ɵɵnextContext(2);\n      return ctx_r78.assignTestVariableColumn($event.target.value, subTestVariable_r72.identifier, test_r60.identifier);\n    });\n    i0.ɵɵelement(5, \"option\", 60);\n    i0.ɵɵelementStart(6, \"option\", 46);\n    i0.ɵɵtext(7, \"* Add column *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, EditReportComponent_div_43_div_1_div_5_option_8_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subTestVariable_r72 = ctx.$implicit;\n    const test_r60 = i0.ɵɵnextContext().$implicit;\n    const ctx_r63 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", subTestVariable_r72.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r63.checkTestVariableAssignment(subTestVariable_r72.identifier, test_r60.identifier));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", subTestVariable_r72.identifier);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r63.report.keys);\n  }\n}\n\nfunction EditReportComponent_div_43_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelementStart(1, \"div\", 54);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EditReportComponent_div_43_div_1_div_4_Template, 5, 2, \"div\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, EditReportComponent_div_43_div_1_div_5_Template, 9, 4, \"div\", 56);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const test_r60 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", test_r60.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", test_r60.settings);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", test_r60.values);\n  }\n}\n\nfunction EditReportComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtemplate(1, EditReportComponent_div_43_div_1_Template, 6, 3, \"div\", 41);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.report.tests);\n  }\n}\n\nfunction EditReportComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 61);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r95 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 83);\n    i0.ɵɵlistener(\"drop\", function EditReportComponent_table_46_td_14_div_1_Template_div_drop_0_listener() {\n      i0.ɵɵrestoreView(_r95);\n      const ctx_r94 = i0.ɵɵnextContext(3);\n      return ctx_r94.drop();\n    })(\"dragover\", function EditReportComponent_table_46_td_14_div_1_Template_div_dragover_0_listener($event) {\n      i0.ɵɵrestoreView(_r95);\n      const ctx_r96 = i0.ɵɵnextContext(3);\n      return ctx_r96.allowDrop($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r84 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", key_r84);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r100 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 84);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r100);\n      const key_r84 = i0.ɵɵnextContext().$implicit;\n      const ctx_r98 = i0.ɵɵnextContext(2);\n      return ctx_r98.deleteColumn(key_r84);\n    });\n    i0.ɵɵtext(1, \"\\u2718\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r103 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 85);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r103);\n      const key_r84 = i0.ɵɵnextContext().$implicit;\n      const ctx_r101 = i0.ɵɵnextContext(2);\n      return ctx_r101.hideColumn(key_r84);\n    });\n    i0.ɵɵtext(1, \"\\u2190\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r106 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r106);\n      const key_r84 = i0.ɵɵnextContext().$implicit;\n      const ctx_r104 = i0.ɵɵnextContext(2);\n      return ctx_r104.populateSelect(key_r84);\n    });\n    i0.ɵɵtext(1, \"\\u271A\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r109 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r109);\n      const key_r84 = i0.ɵɵnextContext().$implicit;\n      const ctx_r107 = i0.ɵɵnextContext(2);\n      return ctx_r107.showColumn(key_r84);\n    });\n    i0.ɵɵtext(1, \"\\u21C9 \");\n    i0.ɵɵelementStart(2, \"div\", 68);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r84 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate1(\"title\", \"Expand \", key_r84, \" data\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(key_r84);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r113 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 88);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r113);\n      const key_r84 = i0.ɵɵnextContext().$implicit;\n      const ctx_r111 = i0.ɵɵnextContext(2);\n      return ctx_r111.showColumn(key_r84);\n    })(\"drag\", function EditReportComponent_table_46_td_14_button_8_Template_button_drag_0_listener($event) {\n      i0.ɵɵrestoreView(_r113);\n      const ctx_r114 = i0.ɵɵnextContext(3);\n      return ctx_r114.drag($event.target.value);\n    });\n    i0.ɵɵtext(1, \"\\u2194\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r84 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", key_r84);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_div_1_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 98);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const listKey_r125 = ctx.$implicit;\n    const key_r84 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", listKey_r125);\n    i0.ɵɵproperty(\"disabled\", listKey_r125 === key_r84);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(listKey_r125);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_div_1_ng_template_6_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 46);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r128 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r128);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r128);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_div_1_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r132 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 93);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_table_46_td_14_div_10_div_1_ng_template_6_Template_select_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r132);\n      const key_r84 = i0.ɵɵnextContext(3).$implicit;\n      const ctx_r130 = i0.ɵɵnextContext(2);\n      return ctx_r130.populateDataFromTextOrOption(key_r84, $event.target.value);\n    });\n    i0.ɵɵelement(1, \"option\", 99);\n    i0.ɵɵtemplate(2, EditReportComponent_table_46_td_14_div_10_div_1_ng_template_6_option_2_Template, 2, 2, \"option\", 100);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r84 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r122 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r122.getTestOptions(key_r84));\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_div_1_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r136 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 101);\n    i0.ɵɵlistener(\"keyup.enter\", function EditReportComponent_table_46_td_14_div_10_div_1_ng_template_8_Template_input_keyup_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r136);\n      const key_r84 = i0.ɵɵnextContext(3).$implicit;\n      const ctx_r134 = i0.ɵɵnextContext(2);\n      return ctx_r134.populateDataFromTextOrOption(key_r84, $event.target.value);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r139 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 92);\n    i0.ɵɵtext(1, \" Copy a column: \");\n    i0.ɵɵelementStart(2, \"select\", 93);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_table_46_td_14_div_10_div_1_Template_select_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r139);\n      const key_r84 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r137 = i0.ɵɵnextContext(2);\n      return ctx_r137.populateDataFromColumn(key_r84, $event.target.value);\n    });\n    i0.ɵɵtemplate(3, EditReportComponent_table_46_td_14_div_10_div_1_option_3_Template, 2, 3, \"option\", 94);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Or set all to: \");\n    i0.ɵɵtemplate(5, EditReportComponent_table_46_td_14_div_10_div_1_div_5_Template, 1, 0, \"div\", 95);\n    i0.ɵɵtemplate(6, EditReportComponent_table_46_td_14_div_10_div_1_ng_template_6_Template, 3, 1, \"ng-template\", null, 96, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(8, EditReportComponent_table_46_td_14_div_10_div_1_ng_template_8_Template, 1, 0, \"ng-template\", null, 97, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r121 = i0.ɵɵreference(7);\n\n    const _r123 = i0.ɵɵreference(9);\n\n    const key_r84 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r116 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r116.report.keys);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r116.testOptionsExist(key_r84))(\"ngIfThen\", _r121)(\"ngIfElse\", _r123);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r143 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 102);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_div_10_ng_template_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r143);\n      const key_r84 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r141 = i0.ɵɵnextContext(2);\n      return ctx_r141.sortColumn(key_r84);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r84 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", key_r84, \" \");\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 89);\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_td_14_div_10_div_1_Template, 10, 4, \"div\", 90);\n    i0.ɵɵtemplate(2, EditReportComponent_table_46_td_14_div_10_ng_template_2_Template, 2, 1, \"ng-template\", null, 91, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r117 = i0.ɵɵreference(3);\n\n    const key_r84 = i0.ɵɵnextContext().$implicit;\n    const ctx_r92 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r92.populateIndex === key_r84)(\"ngIfElse\", _r117);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_11_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r152 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 108);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_div_11_div_2_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r152);\n      const variable_r148 = i0.ɵɵnextContext().$implicit;\n      const ctx_r150 = i0.ɵɵnextContext(4);\n      return ctx_r150.removeVariableAssignment(variable_r148.identifier);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const variable_r148 = i0.ɵɵnextContext().$implicit;\n    const key_r84 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r149 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", !ctx_r149.isColumnHidden(key_r84) ? variable_r148.identifier : \"*\", \" \");\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 106);\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_td_14_div_11_div_2_div_1_Template, 2, 1, \"div\", 107);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const variable_r148 = ctx.$implicit;\n    const key_r84 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", variable_r148.key === key_r84);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_11_div_3_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r162 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 111);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_td_14_div_11_div_3_div_1_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r162);\n      const test_r158 = i0.ɵɵnextContext().$implicit;\n      const tests_r156 = i0.ɵɵnextContext().$implicit;\n      const ctx_r160 = i0.ɵɵnextContext(4);\n      return ctx_r160.removeTestVariableAssignment(test_r158.identifier, tests_r156.identifier);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const test_r158 = i0.ɵɵnextContext().$implicit;\n    const key_r84 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r159 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", !ctx_r159.isColumnHidden(key_r84) ? test_r158.name : \"*\", \" \");\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_11_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_td_14_div_11_div_3_div_1_div_1_Template, 2, 1, \"div\", 110);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const test_r158 = ctx.$implicit;\n    const key_r84 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", test_r158.key === key_r84);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_11_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 106);\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_td_14_div_11_div_3_div_1_Template, 2, 1, \"div\", 109);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tests_r156 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", tests_r156.values);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 103);\n    i0.ɵɵelementStart(1, \"div\", 104);\n    i0.ɵɵtemplate(2, EditReportComponent_table_46_td_14_div_11_div_2_Template, 2, 1, \"div\", 105);\n    i0.ɵɵtemplate(3, EditReportComponent_table_46_td_14_div_11_div_3_Template, 2, 1, \"div\", 105);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r93.report.variables);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r93.report.tests);\n  }\n}\n\nfunction EditReportComponent_table_46_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 64);\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_td_14_div_1_Template, 1, 1, \"div\", 74);\n    i0.ɵɵelementStart(2, \"div\", 65);\n    i0.ɵɵelementStart(3, \"div\", 66);\n    i0.ɵɵtemplate(4, EditReportComponent_table_46_td_14_button_4_Template, 2, 0, \"button\", 75);\n    i0.ɵɵtemplate(5, EditReportComponent_table_46_td_14_button_5_Template, 2, 0, \"button\", 76);\n    i0.ɵɵtemplate(6, EditReportComponent_table_46_td_14_button_6_Template, 2, 0, \"button\", 77);\n    i0.ɵɵtemplate(7, EditReportComponent_table_46_td_14_button_7_Template, 4, 2, \"button\", 78);\n    i0.ɵɵtemplate(8, EditReportComponent_table_46_td_14_button_8_Template, 2, 1, \"button\", 79);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 80);\n    i0.ɵɵtemplate(10, EditReportComponent_table_46_td_14_div_10_Template, 4, 2, \"div\", 81);\n    i0.ɵɵtemplate(11, EditReportComponent_table_46_td_14_div_11_Template, 4, 2, \"div\", 82);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r84 = ctx.$implicit;\n    const ctx_r82 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"reports__data--cell--hidden\", ctx_r82.isColumnHidden(key_r84));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r82.dragging);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r82.isColumnHidden(key_r84));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r82.isColumnHidden(key_r84));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r82.isColumnHidden(key_r84));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r82.isColumnHidden(key_r84));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r82.isColumnHidden(key_r84));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r82.isColumnHidden(key_r84));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r82.populateIndex !== key_r84);\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_2_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r185 = ctx.$implicit;\n    const key_r175 = i0.ɵɵnextContext(3).$implicit;\n    const individual_r167 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", option_r185);\n    i0.ɵɵproperty(\"selected\", option_r185 === individual_r167.user.data[key_r175]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r185);\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r191 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 93);\n    i0.ɵɵlistener(\"change\", function EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_2_Template_select_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r191);\n      const key_r175 = i0.ɵɵnextContext(2).$implicit;\n      const reportId_r168 = i0.ɵɵnextContext().index;\n      const ctx_r189 = i0.ɵɵnextContext(2);\n      return ctx_r189.valueChange2(reportId_r168, key_r175, $event.target.value);\n    });\n    i0.ɵɵelement(1, \"option\", 122);\n    i0.ɵɵtemplate(2, EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_2_option_2_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r175 = i0.ɵɵnextContext(2).$implicit;\n    const individual_r167 = i0.ɵɵnextContext().$implicit;\n    const ctx_r181 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selected\", individual_r167.user.data[key_r175] === \"\" || individual_r167.user.data[key_r175] === undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r181.getTestOptions(key_r175));\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r202 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 125);\n    i0.ɵɵlistener(\"keyup.enter\", function EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_1_Template_input_keyup_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r202);\n      const key_r175 = i0.ɵɵnextContext(3).$implicit;\n      const reportId_r168 = i0.ɵɵnextContext().index;\n      const ctx_r200 = i0.ɵɵnextContext(2);\n      return ctx_r200.valueChange2(reportId_r168, key_r175, $event.target.value);\n    })(\"blur\", function EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_1_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r202);\n      const key_r175 = i0.ɵɵnextContext(3).$implicit;\n      const reportId_r168 = i0.ɵɵnextContext().index;\n      const ctx_r204 = i0.ɵɵnextContext(2);\n      return ctx_r204.valueChange2(reportId_r168, key_r175, $event.target.value);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r175 = i0.ɵɵnextContext(3).$implicit;\n    const individual_r167 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", individual_r167.user.data[key_r175]);\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r211 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"textarea\", 126);\n    i0.ɵɵlistener(\"keyup.enter\", function EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_3_Template_textarea_keyup_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r211);\n      const key_r175 = i0.ɵɵnextContext(3).$implicit;\n      const reportId_r168 = i0.ɵɵnextContext().index;\n      const ctx_r209 = i0.ɵɵnextContext(2);\n      return ctx_r209.valueChange2(reportId_r168, key_r175, $event.target.value);\n    })(\"blur\", function EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_3_Template_textarea_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r211);\n      const key_r175 = i0.ɵɵnextContext(3).$implicit;\n      const reportId_r168 = i0.ɵɵnextContext().index;\n      const ctx_r213 = i0.ɵɵnextContext(2);\n      return ctx_r213.valueChange2(reportId_r168, key_r175, $event.target.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r175 = i0.ɵɵnextContext(3).$implicit;\n    const individual_r167 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(individual_r167.user.data[key_r175]);\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_div_0_Template, 1, 0, \"div\", 95);\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_1_Template, 1, 1, \"ng-template\", null, 123, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_ng_template_3_Template, 2, 1, \"ng-template\", null, 124, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const _r196 = i0.ɵɵreference(2);\n\n    const _r198 = i0.ɵɵreference(4);\n\n    const key_r175 = i0.ɵɵnextContext(2).$implicit;\n    const individual_r167 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngIf\", individual_r167.user.data[key_r175].length < 20)(\"ngIfThen\", _r196)(\"ngIfElse\", _r198);\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_tr_20_td_4_div_1_div_1_Template, 1, 0, \"div\", 95);\n    i0.ɵɵtemplate(2, EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_2_Template, 3, 2, \"ng-template\", null, 96, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, EditReportComponent_table_46_tr_20_td_4_div_1_ng_template_4_Template, 5, 3, \"ng-template\", null, 97, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r180 = i0.ɵɵreference(3);\n\n    const _r182 = i0.ɵɵreference(5);\n\n    const key_r175 = i0.ɵɵnextContext().$implicit;\n    const ctx_r177 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r177.testOptionsExist(key_r175))(\"ngIfThen\", _r180)(\"ngIfElse\", _r182);\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" ... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 64);\n    i0.ɵɵtemplate(1, EditReportComponent_table_46_tr_20_td_4_div_1_Template, 6, 3, \"div\", 121);\n    i0.ɵɵtemplate(2, EditReportComponent_table_46_tr_20_td_4_div_2_Template, 2, 0, \"div\", 121);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const key_r175 = ctx.$implicit;\n    const ctx_r169 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"reports__data--cell--hidden\", ctx_r169.isColumnHidden(key_r175));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r169.isColumnHidden(key_r175));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r169.isColumnHidden(key_r175));\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r223 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 127);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_tr_20_ng_template_18_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r223);\n      const reportId_r168 = i0.ɵɵnextContext().index;\n      const ctx_r221 = i0.ɵɵnextContext(2);\n      return ctx_r221.copyReportText(reportId_r168);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"div\", 68);\n    i0.ɵɵtext(3, \"Click to copy to clipboard\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const individual_r167 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", individual_r167.report, \" \");\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r227 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"textarea\", 128);\n    i0.ɵɵlistener(\"blur\", function EditReportComponent_table_46_tr_20_ng_template_20_Template_textarea_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r227);\n      const reportId_r168 = i0.ɵɵnextContext().index;\n      const ctx_r225 = i0.ɵɵnextContext(2);\n      return ctx_r225.editReportText(reportId_r168, $event.target.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const individual_r167 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(individual_r167.report);\n  }\n}\n\nfunction EditReportComponent_table_46_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r230 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 112);\n    i0.ɵɵelementStart(1, \"td\", 64);\n    i0.ɵɵelementStart(2, \"button\", 113);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_tr_20_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r230);\n      const reportId_r168 = restoredCtx.index;\n      const ctx_r229 = i0.ɵɵnextContext(2);\n      return ctx_r229.deleteUserReport(reportId_r168);\n    });\n    i0.ɵɵtext(3, \"X\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EditReportComponent_table_46_tr_20_td_4_Template, 3, 4, \"td\", 70);\n    i0.ɵɵelementStart(5, \"td\", 114);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 115);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_tr_20_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r230);\n      const reportId_r168 = restoredCtx.index;\n      const ctx_r231 = i0.ɵɵnextContext(2);\n      return ctx_r231.deleteIndividualReport(reportId_r168);\n    });\n    i0.ɵɵtext(9, \"\\u2718\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 116);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_tr_20_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r230);\n      const reportId_r168 = restoredCtx.index;\n      const ctx_r232 = i0.ɵɵnextContext(2);\n      return ctx_r232.saveIndividualReport(reportId_r168);\n    });\n    i0.ɵɵtext(11, \"\\u293D\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 117);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_tr_20_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r230);\n      const reportId_r168 = restoredCtx.index;\n      const ctx_r233 = i0.ɵɵnextContext(2);\n      return ctx_r233.regenerateIndividualReport(reportId_r168);\n    });\n    i0.ɵɵtext(13, \"\\u267B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 118);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_tr_20_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r230);\n      const reportId_r168 = restoredCtx.index;\n      const ctx_r234 = i0.ɵɵnextContext(2);\n      return ctx_r234.editIndividualReport(reportId_r168);\n    });\n    i0.ɵɵtext(15, \"\\u270E\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\", 71);\n    i0.ɵɵtemplate(17, EditReportComponent_table_46_tr_20_span_17_Template, 1, 0, \"span\", 95);\n    i0.ɵɵtemplate(18, EditReportComponent_table_46_tr_20_ng_template_18_Template, 4, 1, \"ng-template\", null, 119, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(20, EditReportComponent_table_46_tr_20_ng_template_20_Template, 2, 1, \"ng-template\", null, 120, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const individual_r167 = ctx.$implicit;\n    const reportId_r168 = ctx.index;\n\n    const _r171 = i0.ɵɵreference(19);\n\n    const _r173 = i0.ɵɵreference(21);\n\n    const ctx_r83 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r83.report.keys);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(individual_r167.report.length);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r83.reportIdToEdit !== reportId_r168)(\"ngIfThen\", _r171)(\"ngIfElse\", _r173);\n  }\n}\n\nfunction EditReportComponent_table_46_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r236 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table\", 62);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\", 63);\n    i0.ɵɵelementStart(3, \"td\", 64);\n    i0.ɵɵelementStart(4, \"div\", 65);\n    i0.ɵɵelementStart(5, \"div\", 66);\n    i0.ɵɵelementStart(6, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r236);\n      const ctx_r235 = i0.ɵɵnextContext();\n      return ctx_r235.hideAllColumns();\n    });\n    i0.ɵɵtext(7, \"\\u21C7 \");\n    i0.ɵɵelementStart(8, \"div\", 68);\n    i0.ɵɵtext(9, \"Collapse all except reports\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 69);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r236);\n      const ctx_r237 = i0.ɵɵnextContext();\n      return ctx_r237.showAllColumns();\n    });\n    i0.ɵɵtext(11, \"\\u21C9 \");\n    i0.ɵɵelementStart(12, \"div\", 68);\n    i0.ɵɵtext(13, \"Show all columns\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, EditReportComponent_table_46_td_14_Template, 12, 10, \"td\", 70);\n    i0.ɵɵelementStart(15, \"td\", 64);\n    i0.ɵɵtext(16, \"Report Tools (inc Chars)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\", 71);\n    i0.ɵɵtext(18, \"Report\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"tbody\");\n    i0.ɵɵtemplate(20, EditReportComponent_table_46_tr_20_Template, 22, 5, \"tr\", 72);\n    i0.ɵɵelementStart(21, \"tr\");\n    i0.ɵɵelementStart(22, \"td\", 73);\n    i0.ɵɵlistener(\"click\", function EditReportComponent_table_46_Template_td_click_22_listener() {\n      i0.ɵɵrestoreView(_r236);\n      const ctx_r238 = i0.ɵɵnextContext();\n      return ctx_r238.addIndividualStudent();\n    });\n    i0.ɵɵtext(23, \"Add student\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.report.keys);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r14.report.reports);\n  }\n}\n\nexport let EditReportComponent = /*#__PURE__*/(() => {\n  class EditReportComponent {\n    constructor(auth, activeRouter, router, reportsService, groupService, templatesService, sentenceService, testsService) {\n      this.auth = auth;\n      this.activeRouter = activeRouter;\n      this.router = router;\n      this.reportsService = reportsService;\n      this.groupService = groupService;\n      this.templatesService = templatesService;\n      this.sentenceService = sentenceService;\n      this.testsService = testsService; // group data\n\n      this.groups = []; // templates data\n\n      this.templates = []; // view booleans\n\n      this.isLoading = false;\n      this.isUpdating = false;\n      this.isSaving = false;\n      this.groupsSelected = [];\n      this.relatedTests = [];\n      this.report = {};\n      this.hiddenColumns = [];\n      this.addedColumns = [];\n      this.unsavedChanges = false; // are there changes made to the report that have not been comitted to the persistent report?\n\n      this.reportSaved = false; // has the report ever been comitted tot he database? false if it hasnt...\n\n      this.reportGenerationReady = false; // is there suffient data to generate reports?\n\n      this.groupKeys = [];\n      this.dragging = false;\n      this.dragTimeout = false;\n      this.reportIdToEdit = -1;\n      this.sortDirection = 1;\n    }\n\n    ngOnInit() {\n      this.isLoading = true; // get the user info...\n\n      this.auth.user.subscribe(user => {\n        // set the user id\n        this.isLoading = false;\n        this.user = user; // load all data first - this is important to be done first so when the parameters fire\n        // the data is all there and able to be accessed.\n\n        this.loadData().subscribe(([groups, templates, sentences]) => {\n          this.groups = groups;\n          this.templates = templates; // monitor the parameter id in the URL and if it changes reload the data...\n\n          this.paramObservable = this.activeRouter.params.subscribe(params => {\n            let reportId = params.id; // set the id and load the template\n\n            this.isLoading = true; // and load as appropriate...\n\n            if (reportId !== undefined) {\n              this.reportSaved = true;\n              this.loadReport(reportId);\n            } else {\n              this.reportSaved = false;\n              this.newReport();\n            }\n          }, error => {\n            console.log(`Error: ${error}`);\n          });\n        }, error => {\n          console.log(`Error: ${error}`);\n        });\n      }); // toggle different styloes for when things get stuck.\n\n      this.sticky = new IntersectionObserver(([e]) => {\n        e.target.toggleAttribute('stuck', e.intersectionRatio < 1);\n      }, {\n        threshold: [1]\n      });\n      this.sticky.observe(document.getElementsByClassName('sticky').item(0));\n    }\n\n    ngOnDestroy() {}\n    /**\r\n     * listen for the escape key press to make any tempory changes go away!\r\n     * @param event\r\n     */\n\n\n    onEscapeKeyPress(event) {\n      this.dragging = false;\n    }\n    /**\r\n     * Updates a current report in the database...\r\n     */\n\n\n    updateReport() {\n      this.isUpdating = true; // call the update function in the report service.\n\n      this.reportsService.updateReport(this.report, this.report.id).subscribe(result => {\n        if (result === true) {\n          // success!\n          this.isUpdating = false;\n          this.reportSaved = true;\n          this.unsavedChanges = false;\n        }\n\n        this.isUpdating = false;\n      }, error => {\n        this.errorMessage = \"Update failed: \" + error;\n        this.isUpdating = false;\n      });\n    }\n    /**\r\n     * Saves a new report to the database.\r\n     */\n\n\n    saveToDatabase() {\n      this.isSaving = true; // call the save function in the report service...\n\n      this.reportsService.createReport(this.report).subscribe(result => {\n        // success, set the new id...\n        this.report.id = result.id; // set the flags to control button visibility.\n\n        this.unsavedChanges = false;\n        this.reportSaved = true;\n        this.isSaving = false;\n        this.router.navigate(['/reports/edit-report/', this.report.id]);\n      }, error => {\n        console.log(`Unable to save: ${error}`);\n        this.reportSaved = false;\n        this.isSaving = false;\n      });\n    }\n    /**\r\n     * Load all required data, including groups and templates data...\r\n     * @returns\r\n     */\n\n\n    loadData() {\n      // load groups and templates concurrently then act\n      let loadGroups = this.groupService.getGroups().pipe(take(1), map(result => {\n        return result;\n      }));\n      let loadTemplate = this.templatesService.getTemplates().pipe(take(1), map(result => {\n        return result;\n      }));\n      let loadSentence = this.sentenceService.getSentencesDatabase().pipe(take(1), map(result => {\n        return result;\n      })); // and return them at the same time...\n\n      return zip(loadGroups, loadTemplate, loadSentence);\n    }\n\n    selectGroup(id, value) {\n      // find if this is selected or not...\n      const groupIndex = this.groupsSelected.findIndex(temp => temp === id); // then do something appropriate with the data\n\n      if (groupIndex !== -1) {\n        if (value === false) {\n          this.groupsSelected.splice(groupIndex, 1);\n        }\n      } else {\n        if (value === true) {\n          this.groupsSelected.push(id);\n        }\n      }\n    } // need works on keys\n\n\n    loadGroupsFromSelection() {\n      // start by getting the groups from the database, as we need to do keys first then users...\n      // get the keys already in the db...\n      let keys = [...this.report.keys];\n      let students = []; // prepopulate with the current students...\n\n      this.report.reports.forEach(repo => {\n        students = [...students, repo.user];\n      }); // for each group in the selected array import those students into the system.\n\n      this.groupsSelected.forEach(groupId => {\n        // get the group from the database....\n        this.groupService.getGroup(groupId).subscribe(data => {\n          // get the students\n          students = [...students, ...data.students]; // get the keys and remove duplicated\n\n          keys = [...keys, ...data.keys].filter((value, index, restOfArray) => restOfArray.indexOf(value) === index);\n        });\n      }); // add any new keys... assume keys with the same value are the same thing\n\n      keys.forEach(key => {\n        if (!this.report.keys.includes(key)) {\n          this.report.keys.push(key);\n        }\n      }); // create a constant with the template, ready to input to new user reports...\n\n      const repoTemplate = this.report.templateId ? this.templatesService.getTemplate(this.report.templateId) : undefined; // and add the students\n\n      students.forEach(student => {\n        // find if the student already existsw...\n        const studentIndex = this.report.reports.findIndex(report => report.user.id === student.id); // if not add them...\n\n        if (studentIndex === -1) {\n          // not found this student yet so its a new addition...\n          const newReport = {\n            userId: student.id,\n            user: student,\n            templateId: repoTemplate.id,\n            report: \"\",\n            generated: undefined\n          }; // checka all the keys have a value for this user and if not set it as blank...\n\n          this.report.keys.forEach(key => {\n            if (!(key in newReport.user.data)) {\n              newReport.user.data[key] = \"\";\n            }\n          }); // and add to the array....\n\n          this.report.reports.push(newReport);\n        } else {\n          // select the report from the database...\n          let report = this.report.reports[studentIndex];\n          keys.forEach(key => {\n            // check to see if the key already exists ont he user data object\n            if (key in report.user.data) {\n              // the key exists, check if its been defined...\n              if (student.data[key] !== undefined) {\n                // if it has a value check if its a different value, and if it is put both in divided by a /\n                report.user.data[key] = report.user.data[key] === student.data[key] ? report.user.data[key] : report.user.data[key] += '/' + student.data[key];\n              }\n            } else {\n              // its not got this key and so create it and make it blank...\n              report.user.data[key] = \"\";\n            }\n          });\n        }\n      }); // and clear the textbox, and close the rmenu...\n\n      document.getElementsByName(\"selectGroups\").forEach(checkBox => {\n        checkBox.checked = false;\n      }); // clear the array, students can be added again!!!\n\n      this.groupsSelected = [];\n    }\n\n    loadTemplate(templateId) {\n      // get the index\n      let index = this.templates.findIndex(temp => temp.id === templateId); // and if it exists then load...\n\n      if (index !== -1) {\n        // set the report id\n        this.report.templateId = templateId;\n        this.loadedTemplate = templateId; // set the template id on each of the users (in the future potentially each student may have different template ids)\n\n        this.report.reports.forEach(repo => {\n          repo.templateId = templateId;\n        }); // get the template and proces the variables required...\n\n        const template = this.templatesService.getTemplate(templateId);\n        this.processTemplate(template);\n      } else {\n        // the template may have been deleted, what now?\n        this.report.templateId = \"\";\n        this.loadedTemplate = \"\"; // set the template id on each of the users (in the future potentially each student may have different template ids)\n\n        this.report.reports.forEach(repo => {\n          repo.templateId = \"\";\n        }); // and reset the variables, which dont exist iof there is no template...\n\n        this.report.globals = [];\n        this.report.variables = [];\n        this.report.tests = [];\n      }\n\n      this.checkForChanges();\n    }\n    /**\r\n     * Load an report set.\r\n     * @param id\r\n     */\n\n\n    loadReport(id) {\n      // get the report.\n      this.reportsService.getReport(id).subscribe(report => {\n        this.report = report; // set to not loading...\n\n        this.isLoading = false; // check if we can make the report yet...\n\n        this.loadedGroup = this.report.groupId;\n        this.loadedTemplate = this.report.templateId;\n        this.loadTemplate(this.loadedTemplate);\n      }, error => {\n        this.isLoading = false;\n        console.log(`Error loading report with ID ${id}: ${error}`);\n      });\n    }\n    /**\r\n     * A new report is being created...\r\n     */\n\n\n    newReport() {\n      this.isLoading = false;\n      this.report = {\n        id: \"\",\n        groupId: \"\",\n        templateId: \"\",\n        name: \"\",\n        lastUpdated: Date.now(),\n        manager: this.user.id,\n        variables: [],\n        globals: [],\n        tests: [],\n        keys: [],\n        reports: []\n      };\n      this.loadedGroup = undefined;\n    }\n    /**\r\n     * Check if all data is available to parse the group into a report\r\n     */\n\n\n    processTemplate(template) {\n      // get the variables...\n      let variables = this.reportsService.generateVariables(template);\n      let tests = this.reportsService.generateTests(template); // if the variables are already defined we dont want to overwrite them.\n      // globals\n\n      let newGlobals = [];\n      let newVariables = [];\n      let newTests = [];\n      variables[0].forEach(variable => {\n        let variableIndex = this.report.globals.findIndex(temp => temp.identifier === variable.identifier); // if the index isnt found on the already loaded global variables then add it, it isnt already there.\n\n        variableIndex === -1 ? newGlobals.push(variable) : newGlobals.push(this.report.globals[variableIndex]);\n      }); // variables\n\n      variables[1].forEach(variable => {\n        let variableIndex = this.report.variables.findIndex(temp => temp.identifier === variable.identifier); // if the index isnt found on the already loaded variable variables then add it, it isnt already there.\n\n        variableIndex === -1 ? newVariables.push(variable) : newVariables.push(this.report.variables[variableIndex]);\n      }); // tests\n\n      tests.forEach(test => {\n        let testIndex = this.report.tests.findIndex(temp => test.identifier === temp.identifier); // if the index isnt found on the already loaded global variables then add it, it isnt already there.\n\n        testIndex === -1 ? newTests.push(test) : newTests.push(this.report.tests[testIndex]);\n      });\n      this.report.globals = newGlobals;\n      this.report.variables = newVariables;\n      this.report.tests = newTests;\n    } //DEALING WITH VARIABLES\n\n    /**\r\n     * Assigns a value toa global variable - i.e. something that is the same for each student.\r\n     * @param identifier\r\n     * @param value\r\n     */\n\n\n    assignGlobalValue(identifier, value) {\n      // find the global int he report structure.\n      const gloIndex = this.report.globals.findIndex(temp => temp.identifier === identifier); // when found set the value of the variable\n\n      if (gloIndex !== -1) {\n        if (value === \"newOption\") {\n          // force the text box to appear back for this variable...\n          this.report.globals[gloIndex].options.push(\"\");\n        } else {\n          // default behaviour is to select the option\n          this.report.globals[gloIndex].value = value;\n        }\n      }\n\n      this.checkForChanges();\n    }\n    /**\r\n     * Add an option to a predefined list of options...\r\n     * @param identifier\r\n     * @param value\r\n     */\n\n\n    addGlobalOption(identifier, value) {\n      // find the global int he report structure.\n      const gloIndex = this.report.globals.findIndex(temp => temp.identifier === identifier); // set the last option as equal to the value...\n      // this is the only instance in which this function should fire...\n\n      if (gloIndex !== -1) {\n        const optionLength = this.report.globals[gloIndex].options.length;\n        const optionValue = this.report.globals[gloIndex].options[optionLength - 1];\n\n        if (optionValue === \"\") {\n          this.report.globals[gloIndex].options[optionLength - 1] = value;\n          this.assignGlobalValue(identifier, value);\n        } else {// something set up wrong...\n        }\n      }\n\n      this.checkForChanges();\n    } // need works on keys\n\n    /**\r\n     * Assings a variable to a column of data...\r\n     * @param toIdentifier\r\n     * @param assignIdentifier\r\n     */\n\n\n    assignVariableColumn(toIdentifier, assignIdentifier) {\n      // toIdentifier is the column to assign this to...\n      // assighnIdentifier is the variable to assign\n      let findIndex; // if it doesnt exist then create a column for it...\n\n      while ((findIndex = this.report.keys.findIndex(temp => temp === toIdentifier)) === -1) {\n        this.report.keys.push(toIdentifier);\n        this.addedColumns.push(toIdentifier);\n      } // asign to students...\n\n\n      this.report.reports.forEach(user => {\n        user.user.data[assignIdentifier] = user.user.data[toIdentifier] ? user.user.data[toIdentifier] : \"\";\n      }); // now assign tot he new column...\n\n      let varIndex = this.report.variables.findIndex(temp => temp.identifier.toLowerCase() === assignIdentifier.toLowerCase()); // if found assign it...\n\n      if (varIndex !== -1) {\n        this.report.variables[varIndex].key = toIdentifier;\n      } else {\n        // it went wrong, who knows what to do?\n        // I SHOULD ALEX, SO PUT SOMETHING HERE ONE DAY??\n        console.log(\"Failed to assign to variable\"); // why is this randomyl here??? :S\n\n        let newVar = {\n          identifier: assignIdentifier,\n          key: toIdentifier,\n          value: \"\",\n          options: ['m', 'f', 'p']\n        };\n        this.report.variables.push(newVar);\n      }\n\n      this.checkForChanges();\n    }\n    /**\r\n    * Assings a variable to a column of data for a test variable\r\n    * SAME AS ABOVE FUNCTION BUT FOR TESTS...\r\n    * @param toIdentifier\r\n    * @param assignIdentifier\r\n    */\n\n\n    assignTestVariableColumn(toIdentifier, assignIdentifier, testName) {\n      // toIdentifier is the column to assign this to...\n      // assighnIdentifier is the variable to assign\n      let findIndex; // if it doesnt exist then create a column for it...\n\n      while ((findIndex = this.report.keys.findIndex(temp => temp === toIdentifier)) === -1) {\n        this.report.keys.push(toIdentifier);\n        this.addedColumns.push(toIdentifier);\n      } // asign to students...\n\n\n      this.report.reports.forEach(user => {\n        user.user.data[assignIdentifier] = user.user.data[toIdentifier] ? user.user.data[toIdentifier] : \"\";\n      }); // now assign tot he new column...\n\n      let varIndex = this.report.tests.findIndex(temp => temp.identifier.toLowerCase() === testName.toLowerCase()); // if found assign it...\n\n      if (varIndex !== -1) {\n        let valIndex = this.report.tests[varIndex].values.findIndex(temp => temp.identifier.toLowerCase() === assignIdentifier.toLowerCase());\n        this.report.tests[varIndex].values[valIndex].key = toIdentifier;\n      } else {\n        // it went wrong, who knows what to do?\n        // I SHOULD ALEX, SO PUT SOMETHING HERE ONE DAY??\n        console.log(\"Failed to assign to variable\");\n      }\n\n      console.log(this.report);\n      this.checkForChanges();\n    }\n    /**\r\n     * Remove the assignment of a variable\r\n     * @param varIdentifier\r\n     */\n\n\n    removeVariableAssignment(varIdentifier) {\n      // get the index\n      const varIndex = this.report.variables.findIndex(temp => temp.identifier.toLowerCase() === varIdentifier.toLowerCase()); // and remove the key from it...\n\n      if (varIndex !== -1) {\n        this.report.variables[varIndex].key = \"\";\n      }\n\n      this.checkForChanges();\n    }\n    /**\r\n     * Remove the assignment of a test variable\r\n     * @param varIdentifier\r\n     */\n\n\n    removeTestVariableAssignment(varIdentifier, testName) {\n      // get the index\n      const varIndex = this.report.tests.findIndex(temp => temp.identifier.toLowerCase() === testName.toLowerCase()); // and remove the key from it...\n\n      if (varIndex !== -1) {\n        const valueIndex = this.report.tests[varIndex].values.findIndex(temp => temp.identifier.toLowerCase() === varIdentifier.toLowerCase()); // and set the value back to \"\"\n\n        if (valueIndex !== -1) {\n          this.report.tests[varIndex].values[valueIndex].key = \"\";\n        }\n      }\n\n      this.checkForChanges();\n    }\n    /**\r\n     * Checks to see if a variable has been assigned to a column yet.\r\n     * @param identifier\r\n     * @returns\r\n     */\n\n\n    checkVariableAssignment(identifier) {\n      // find the variable index...\n      const index = this.report.variables.findIndex(temp => temp.identifier.toLowerCase() === identifier.toLowerCase()); // if it exists...\n\n      if (index !== -1) {\n        return this.report.variables[index].key === \"\" ? false : true;\n      }\n\n      return false;\n    }\n    /**\r\n     * Checks to see if a test variable has been assigned to a column yet.\r\n     * @param identifier\r\n     * @param testName\r\n     * @returns\r\n     */\n\n\n    checkTestVariableAssignment(identifier, testName) {\n      // find the variable index...\n      const index = this.report.tests.findIndex(temp => temp.identifier.toLowerCase() === testName.toLowerCase()); // if it exists...\n\n      if (index !== -1) {\n        const valIndex = this.report.tests[index].values.findIndex(temp => temp.identifier.toLowerCase() === identifier.toLowerCase());\n        return this.report.tests[index].values[valIndex].key === \"\" ? false : true;\n      }\n\n      return false;\n    } // need works on keys\n\n    /**\r\n     * Set a value on the data table...\r\n     * Adds it to the report array...\r\n     * This does NOT change the class list...\r\n     * @param reportId\r\n     * @param key\r\n     * @param input\r\n     */\n\n\n    valueChange2(reportId, name, input) {\n      let keys = this.getKeyFromName(name);\n\n      for (let i = 0; i < keys.length; i++) {\n        this.report.reports[reportId].user.data[keys[i]] = input;\n      }\n\n      this.report.reports[reportId].user.data[name] = input;\n      console.log(this.report.reports[reportId].user.data);\n      this.checkForChanges();\n    }\n    /**\r\n     * Hides a column with the given key name...\r\n     * @param key\r\n     */\n\n\n    hideColumn(key) {\n      this.hiddenColumns.push(key);\n    }\n    /**\r\n     * Hides all the columns at once\r\n     */\n\n\n    hideAllColumns() {\n      this.hiddenColumns = this.report.keys;\n    }\n    /**\r\n     * Shows all the columns...\r\n     */\n\n\n    showAllColumns() {\n      this.hiddenColumns = [];\n    }\n    /**\r\n     * Shows a hidden column\r\n     * @param key\r\n     */\n\n\n    showColumn(key) {\n      let index = this.hiddenColumns.findIndex(str => str === key); // if it was found in the array, then remove it.\n\n      if (index !== -1) {\n        this.hiddenColumns.splice(index, 1);\n      }\n    } // checks if a column is hidden or not. Is this the most efficient way given its called on every cell multiple times?\n\n\n    isColumnHidden(key) {\n      return this.hiddenColumns.findIndex(str => str === key) === -1 ? false : true;\n    }\n    /**\r\n     * Tests if a column was added, or whether it was part of the class data.\r\n     * Kind of deprecated as persistence is hard and maybe not all class data is relevant.\r\n     * Maybe an option to add data back in?\r\n     *\r\n     * @param colName\r\n     * @returns\r\n     */\n\n\n    wasColumnAdded(colName) {\n      return this.addedColumns.findIndex(str => str === colName) === -1 ? false : true;\n    } // need works on keys\n\n    /**\r\n     * Deletes a column that has been created in the reports section.\r\n     * Cannot delete columns of data which ahs been pre entered.\r\n     *\r\n     * @param key\r\n     */\n\n\n    deleteColumn(key) {\n      let findIndex = this.report.keys.findIndex(keys => keys === key); // and if found, remove it...\n\n      if (findIndex !== -1) {\n        this.report.keys.splice(findIndex, 1); // remove from the users as well...\n\n        this.report.reports.forEach(user => {\n          delete user.user.data[key];\n        }); // AND remove any variables which are added to it...\n\n        this.report.variables.every(temp => {\n          if (temp.key === key) {\n            temp.key = \"\";\n            return false;\n          }\n\n          return true;\n        }); // and same for tests ?(easier way for this?)\n\n        this.report.tests.forEach(temp => {\n          temp.values.every(tmpVal => {\n            if (tmpVal.key === key) {\n              tmpVal.key = \"\";\n              return false;\n            }\n\n            return true;\n          });\n        });\n      }\n\n      this.checkForChanges();\n    }\n\n    deleteUserReport(reportId) {\n      this.report.reports.splice(reportId, 1);\n    }\n    /**\r\n     *\r\n     * If you change the settings on a test variable this function will modify all relevant values...\r\n     * This will need a warning as it will delete data...\r\n     *\r\n     * @param testName\r\n     * @param value\r\n     */\n\n\n    testSettingsChange(testName, value) {\n      let test = this.testsService.getTest(testName);\n      let testIndex = this.report.tests.findIndex(temp => temp.identifier === testName);\n      let optionIndex = test.settings.options.findIndex(temp => temp.name === value);\n      let options = test.settings.options[optionIndex].options; // set all the options...\n\n      this.report.tests[testIndex].values.forEach(val => {\n        val.options = Object.values(options);\n      });\n      this.report.tests[testIndex].settings.value.name = value; // test all the values that were set for this, and if they are not in the new scheme, remove them...\n      // this should come with a varning :D\n\n      this.report.reports.forEach(report => {\n        this.report.tests[testIndex].values.forEach(temp => {\n          // change to blank...\n          report['user'].data[temp.identifier] = \"\";\n        });\n      });\n    }\n    /**\r\n     * Checks whether a column has specific values it can take...\r\n     * @param key\r\n     * @returns\r\n     */\n\n\n    testOptionsExist(key) {\n      let returnValue = false; // return -1 if there is no set of test options associated with this.\n      // iterate over the tests\n\n      this.report.tests.forEach((test, testIndex) => {\n        // iterate over the values and find the key associated with it if applicable\n        test.values.forEach((temp, valueIndex) => {\n          // if the key is identical to the column key then return the index.\n          if (temp.key === key) {\n            returnValue = true;\n          }\n        });\n      });\n      return returnValue;\n    }\n    /**\r\n     * Returns the options for a particular test...\r\n     * @param key\r\n     * @returns\r\n     */\n\n\n    getTestOptions(key) {\n      let returnValue = []; // return -1 if there is no set of test options associated with this.\n      // iterate over the tests\n\n      this.report.tests.forEach((test, testIndex) => {\n        // iterate over the values and find the key associated with it if applicable\n        test.values.forEach((temp, valueIndex) => {\n          // if the key is identical to the column key then return the index.\n          if (temp.key === key) {\n            returnValue = temp.options.slice().reverse();\n          }\n        });\n      });\n      return returnValue;\n    }\n\n    checkForChanges() {\n      this.unsavedChanges = JSON.stringify(this.loadedReport) !== JSON.stringify(this.report) ? true : false;\n      this.reportGenerationReady = this.reportsService.testExecutability(this.report);\n    }\n\n    generateReports() {\n      this.report = this.reportsService.generateBatchReports(this.report);\n    } // functions to show the various sections or not...\n\n\n    showTests() {\n      return this.report ? this.report.tests ? this.report.tests.length > 0 ? true : false : false : false;\n    }\n\n    showVariables() {\n      return this.report ? this.report.variables ? this.report.variables.length > 0 ? true : false : false : false;\n    }\n\n    showGlobals() {\n      return this.report ? this.report.globals ? this.report.globals.length > 0 ? true : false : false : false;\n    }\n    /**\r\n     * toggle populate index...\r\n     * @param key\r\n     */\n\n\n    populateSelect(key) {\n      this.populateIndex ? this.populateIndex === key ? this.populateIndex = undefined : this.populateIndex = key : this.populateIndex = key; // load the group data for this bunch...\n\n      this.getGroupData();\n    }\n\n    getGroupData() {\n      // get the columns/ data fields for this group...\n      this.groupService.getGroup(this.report.groupId).subscribe(grp => {\n        console.log(this.report);\n        let groupData = grp;\n        this.groupKeys = groupData.keys;\n      });\n    }\n    /**\r\n     * deprecated\r\n     * No longer needed since how groups got added changed.\r\n     * @param toCol\r\n     * @param fromCol\r\n     */\n    // populateDataFromKey(colName: string, key: string): void {\n    //     // get the columns/ data fields for this group...\n    //     this.groupService.getGroup(this.report.groupId).subscribe((grp: Group) => {\n    //         let groupData: Group = grp;\n    //         // set the values in the report\n    //         // need unique id on students else reordering will break this\n    //         // poor man solution for now.\n    //         this.report.reports.forEach((student: Report, index: number) => {\n    //             student['user'].data[colName] = groupData.students[index].data[key]; \n    //         })\n    //         // add the key back into the keys database...\n    //     })\n    // }\n\n\n    populateDataFromColumn(toCol, fromCol) {\n      this.report.reports.forEach((student, index) => {\n        student['user'].data[toCol] = student['user'].data[fromCol];\n      });\n    }\n\n    populateDataFromTextOrOption(key, value) {\n      this.report.reports.forEach((student, index) => {\n        student['user'].data[key] = value;\n      });\n    }\n    /**\r\n     * Copies the report text into the clipboard\r\n     * @param reportId\r\n     */\n\n\n    copyReportText(reportId) {\n      let text = this.report.reports[reportId].report;\n      navigator.clipboard.writeText(text);\n    } // drag and drop functionality to reorder the table...\n\n\n    drop() {\n      this.dragging = false;\n    }\n\n    allowDrop(event) {\n      event.preventDefault(); // if the current target has been moved, then auto move it.\n\n      let targetKey = event.target.value;\n\n      if (targetKey !== this.dragKey && !this.dragTimeout) {\n        let moveIndex = this.report.keys.findIndex(temp => temp === this.dragKey);\n        let toIndex = this.report.keys.findIndex(temp => temp === targetKey);\n\n        if (toIndex !== -1 && moveIndex !== -1) {\n          // reorder keys\n          this.reOrderKeys(moveIndex, toIndex, this.dragKey);\n          this.dragKey = targetKey; // set a timeout before a reorder can happen again\n\n          setTimeout(() => {\n            this.dragTimeout = false;\n          }, 250);\n        }\n      }\n    }\n\n    drag(ev) {\n      this.dragKey = ev;\n      this.dragging = true;\n    }\n\n    reOrderKeys(from, to, key) {\n      // stop further drags happen buggily\n      this.dragTimeout = true; // modify the array\n\n      this.report.keys.splice(from, 1);\n      this.report.keys.splice(to, 0, key);\n    } // REPORT TOOLS\n\n    /**\r\n     * Removes a report from the user.\r\n     * @param reportId\r\n     */\n\n\n    deleteIndividualReport(reportId) {\n      this.report.reports[reportId].report = \"\";\n    }\n    /**\r\n     * Creates a new version of the report for this user.\r\n     * @param reportId\r\n     */\n\n\n    regenerateIndividualReport(reportId) {\n      this.report.reports[reportId].report = this.reportsService.generateIndividualReports(this.report.reports[reportId], this.report.globals, this.report.variables, this.report.tests);\n    }\n\n    saveIndividualReport(reportId) {\n      // see if any reports have already been saved...\n      let reportFound = this.report.keys.includes(\"Saved Report\");\n\n      if (reportFound) {\n        this.report.reports[reportId].user.data['Saved Report'] = this.report.reports[reportId].report;\n      } else {\n        // add the column and the key for each user.\n        this.report.reports.forEach(user => {\n          user.user.data['Saved Report'] = \"\";\n        });\n        this.report.keys.push('Saved Report');\n        this.addedColumns.push('Saved Report'); // then add to it for this user.\n\n        this.report.reports[reportId].user.data['Saved Report'] = this.report.reports[reportId].report;\n      }\n    }\n    /**\r\n     * Allows this report to be individually edited.\r\n     * @param reportId\r\n     */\n\n\n    editIndividualReport(reportId) {\n      this.reportIdToEdit === reportId ? this.reportIdToEdit = -1 : this.reportIdToEdit = reportId;\n    }\n    /**\r\n     * Edits the text of a report...\r\n     * @param reportId\r\n     * @param newText\r\n     */\n\n\n    editReportText(reportId, newText) {\n      this.report.reports[reportId].report = newText;\n      this.editIndividualReport(reportId);\n    }\n    /**\r\n     * Sorts a column by key.\r\n     * @param key\r\n     */\n\n\n    sortColumn(key) {\n      this.report.reports.sort((a, b) => {\n        let keyA = a.user.data[key];\n        let keyB = b.user.data[key];\n        return keyA > keyB ? 1 * this.sortDirection : keyA === keyB ? 0 : -1 * this.sortDirection;\n      }); // reverse the sort for the next iteration.\n      // basic method but effective.\n\n      this.sortDirection *= -1;\n    }\n\n    getKeyFromName(name) {\n      let keys = []; // test the variables first to see if its a variable...\n\n      for (let i = 0; i < this.report.variables.length; i++) {\n        this.report.variables[i].key === name ? keys.push(this.report.variables[i].identifier) : null;\n      } // check the tests...\n\n\n      for (let i = 0; i < this.report.tests.length; i++) {\n        // now the values in the tests...\n        for (let o = 0; o < this.report.tests[i].values.length; o++) {\n          this.report.tests[i].values[o].key === name ? keys.push(this.report.tests[i].values[o].identifier) : null;\n        }\n      }\n\n      return keys.filter((value, index, restOfArray) => restOfArray.indexOf(value) === index);\n    }\n\n    addIndividualStudent() {\n      // get a new id for this unknown student\n      let newUserId = this.groupService.generateRandomId(); // create a report object\n\n      let newReport = {\n        userId: newUserId,\n        templateId: this.report.templateId ? this.report.templateId : \"\",\n        user: {\n          id: newUserId,\n          data: {}\n        },\n        report: \"\",\n        generated: null\n      }; // add data fields onto the user from another previous user - this means where data is stored but not displayed this user has access\n\n      if (this.report.reports.length > 0) {\n        for (const [key] of Object.entries(this.report.reports[this.report.reports.length - 1].user.data)) {\n          newReport.user.data[key] = \"\";\n        }\n      } else {\n        for (const key of this.report.keys) {\n          newReport.user.data[key] = \"\";\n        }\n      } // and then push into the reports...\n\n\n      this.report.reports.push(newReport);\n    }\n    /**\r\n     * NOTE: This function does nothing yet, but will be implemented if a sentenceservice overhaul takes place.\r\n     * In the databace g| and v| will select which variable set to come from, and irrespective of what is sent as userdata there\r\n     * is no link between the report setup and the sentence service.\r\n     *\r\n     * @param globalIndex\r\n     */\n    // convertToVariable(globalIndex: number) : void {\n    //     let global: GlobalValues = this.report.globals[globalIndex];\n    //     // create a new variale object\n    //     let newVariable: VariableValues = {\n    //         identifier: global.identifier, \n    //         key: \"\", \n    //         value: global.value, \n    //         options: global.options\n    //     }\n    //     // push onto the variables array and pop from the globals.\n    //     this.report.variables.push(newVariable);\n    //     this.report.globals.splice(globalIndex, 1);\n    // }\n\n\n    printReportObject() {\n      console.log(this.report);\n    }\n\n  }\n\n  EditReportComponent.ɵfac = function EditReportComponent_Factory(t) {\n    return new (t || EditReportComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ReportsService), i0.ɵɵdirectiveInject(i4.GroupsService), i0.ɵɵdirectiveInject(i5.TemplatesService), i0.ɵɵdirectiveInject(i6.SentencesService), i0.ɵɵdirectiveInject(i7.TestsService));\n  };\n\n  EditReportComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditReportComponent,\n    selectors: [[\"app-edit-report\"]],\n    hostBindings: function EditReportComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.escape\", function EditReportComponent_keydown_escape_HostBindingHandler($event) {\n          return ctx.onEscapeKeyPress($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 47,\n    vars: 19,\n    consts: [[1, \"reports__options\", \"sticky\"], [\"class\", \"loading\", 4, \"ngIf\"], [1, \"reports__settings\"], [1, \"reports__settings--flex\"], [1, \"reports__settings--setting\"], [1, \"reports__settings--text\"], [1, \"reports__settings--input\"], [\"type\", \"text\", \"name\", \"reportsname\", \"id\", \"reportsname\", 1, \"reports__input\", \"reports__input--text\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"reportstemplate\", \"id\", \"reportstemplate\", 1, \"reports__input\", \"reports__input--select\", 3, \"change\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [1, \"multi-select-dropdown\"], [\"type\", \"checkbox\", \"name\", \"selectGroups\", \"id\", \"openMenuAddClass\"], [\"for\", \"openMenuAddClass\", 1, \"multi-select-dropdown__selector\"], [1, \"multi-select-dropdown__selector--text\"], [1, \"multi-select-dropdown__selector--arrow\"], [1, \"multi-select-dropdown__element\"], [\"class\", \"multi-select-dropdown__option\", 4, \"ngFor\", \"ngForOf\"], [1, \"multi-select-dropdown__option\"], [1, \"input__button\", 3, \"disabled\", \"click\"], [1, \"reports__database-buttons\"], [\"class\", \"reports__button\", \"title\", \"Save this new report to the database\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"reports__button\", \"title\", \"Click to update your report in the database\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"title\", \"Click here to generate your reports\", 1, \"reports__button\", 3, \"disabled\", \"click\"], [\"class\", \"divider-line divider-line__thin\", 4, \"ngIf\"], [3, \"click\"], [1, \"reports__variable-section\"], [\"class\", \"reports__variable--description\", 4, \"ngIf\"], [\"class\", \"reports__variable-column\", 4, \"ngIf\"], [\"class\", \"divider-line divider-line__thin u__margin-top--medium\", 4, \"ngIf\"], [1, \"reports__data\"], [\"class\", \"reports__data--table\", 4, \"ngIf\"], [1, \"loading\"], [3, \"value\", \"selected\"], [\"name\", \"selectGroups\", \"type\", \"checkbox\", 3, \"id\", \"change\"], [3, \"for\"], [\"title\", \"Save this new report to the database\", 1, \"reports__button\", 3, \"disabled\", \"click\"], [\"title\", \"Click to update your report in the database\", 1, \"reports__button\", 3, \"disabled\", \"click\"], [1, \"divider-line\", \"divider-line__thin\"], [1, \"reports__variable--description\"], [1, \"reports__variable-column\"], [\"class\", \"reports__variable\", 4, \"ngFor\", \"ngForOf\"], [1, \"reports__variable\"], [1, \"reports__variable--name\"], [1, \"reports__input\", \"reports__input--select\", 3, \"disabled\", \"title\", \"change\"], [\"value\", \"\", \"disabled\", \"\", 3, \"selected\"], [3, \"value\"], [\"type\", \"text\", \"class\", \"reports__input reports__input--text\", 3, \"value\", \"blur\", \"keyup.enter\", 4, \"ngIf\"], [\"class\", \"reports__input reports__input--select\", 3, \"change\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"reports__input reports__input--text\", 3, \"blur\", \"keyup.enter\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"reports__input\", \"reports__input--text\", 3, \"value\", \"blur\", \"keyup.enter\"], [1, \"reports__input\", \"reports__input--select\", 3, \"change\"], [\"value\", \"newOption\"], [\"type\", \"text\", 1, \"reports__input\", \"reports__input--text\", 3, \"blur\", \"keyup.enter\"], [1, \"reports__variable--multirow\"], [\"class\", \"reports__variable--options\", 4, \"ngIf\"], [\"class\", \"reports__variable--multirow reports__variable--wrap-prevention\", 4, \"ngFor\", \"ngForOf\"], [1, \"reports__variable--options\"], [1, \"reports__variable--multirow\", \"reports__variable--wrap-prevention\"], [1, \"reports__input\", \"reports__input--select\", 3, \"disabled\", \"change\"], [\"value\", \"\", \"selected\", \"\", \"disabled\", \"\"], [1, \"divider-line\", \"divider-line__thin\", \"u__margin-top--medium\"], [1, \"reports__data--table\"], [1, \"reports__data--row\", \"reports__data--header\"], [1, \"reports__data--cell\"], [1, \"reports__data--cell-header\"], [1, \"reports__data--cell-header-buttons\"], [1, \"reports__data-buttons\", \"reports__data-buttons--collapse-all\", \"tooltipped\", 3, \"click\"], [1, \"tooltip\"], [1, \"reports__data-buttons\", \"reports__data-buttons--show-all\", \"tooltipped\", 3, \"click\"], [\"class\", \"reports__data--cell\", 3, \"reports__data--cell--hidden\", 4, \"ngFor\", \"ngForOf\"], [1, \"reports__data--cell\", \"reports__data--report\"], [\"class\", \"reports__data--row reports__data--data\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"100\", 1, \"reports__data--cell\", \"reports__data--add-student\", 3, \"click\"], [\"class\", \"reports__data--cell-header--dragging\", 3, \"value\", \"drop\", \"dragover\", 4, \"ngIf\"], [\"class\", \"reports__data-buttons reports__data-buttons--delete\", \"title\", \"Delete column\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"reports__data-buttons reports__data-buttons--hide\", \"title\", \"Hide column\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"reports__data-buttons reports__data-buttons--populate\", \"title\", \"Prepopulate data from another source\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"reports__data-buttons reports__data-buttons--show tooltipped\", 3, \"title\", \"click\", 4, \"ngIf\"], [\"class\", \"reports__data-buttons reports__data-buttons--move\", \"draggable\", \"true\", \"title\", \"Click and hold the drag this column to another position.\", 3, \"value\", \"click\", \"drag\", 4, \"ngIf\"], [1, \"reports__data--cell-header-detail\"], [\"class\", \"reports__data--cell-header-key\", 4, \"ngIf\"], [\"class\", \"reports__data--cell-header-variables\", 4, \"ngIf\"], [1, \"reports__data--cell-header--dragging\", 3, \"value\", \"drop\", \"dragover\"], [\"title\", \"Delete column\", 1, \"reports__data-buttons\", \"reports__data-buttons--delete\", 3, \"click\"], [\"title\", \"Hide column\", 1, \"reports__data-buttons\", \"reports__data-buttons--hide\", 3, \"click\"], [\"title\", \"Prepopulate data from another source\", 1, \"reports__data-buttons\", \"reports__data-buttons--populate\", 3, \"click\"], [1, \"reports__data-buttons\", \"reports__data-buttons--show\", \"tooltipped\", 3, \"title\", \"click\"], [\"draggable\", \"true\", \"title\", \"Click and hold the drag this column to another position.\", 1, \"reports__data-buttons\", \"reports__data-buttons--move\", 3, \"value\", \"click\", \"drag\"], [1, \"reports__data--cell-header-key\"], [\"class\", \"reports__data--prepopulate\", 4, \"ngIf\", \"ngIfElse\"], [\"displayKey\", \"\"], [1, \"reports__data--prepopulate\"], [1, \"reports__input\", \"reports__input--select\", \"reports__input--table\", 3, \"change\"], [3, \"value\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"optionsBlock\", \"\"], [\"typeBlock\", \"\"], [3, \"value\", \"disabled\"], [\"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"reports__input\", \"reports__input--text\", \"reports__input--table\", 3, \"keyup.enter\"], [1, \"reports__key\", 3, \"click\"], [1, \"reports__data--cell-header-variables\"], [1, \"reports__key-variable-link--flexbox\"], [\"class\", \"reports__key-variable-link\", 4, \"ngFor\", \"ngForOf\"], [1, \"reports__key-variable-link\"], [\"class\", \"reports__key-variable-link--link-variable\", 3, \"click\", 4, \"ngIf\"], [1, \"reports__key-variable-link--link-variable\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"reports__key-variable-link--link-test\", 3, \"click\", 4, \"ngIf\"], [1, \"reports__key-variable-link--link-test\", 3, \"click\"], [1, \"reports__data--row\", \"reports__data--data\"], [\"title\", \"Remove this report\", 1, \"reports__data-buttons\", \"reports__data-buttons--delete\", 3, \"click\"], [1, \"reports__data--cell\", \"reports__data--report-options\"], [1, \"reports__data-buttons\", \"reports__data-buttons--report-delete\", 3, \"click\"], [1, \"reports__data-buttons\", \"reports__data-buttons--report-save\", 3, \"click\"], [1, \"reports__data-buttons\", \"reports__data-buttons--report-regenerate\", 3, \"click\"], [1, \"reports__data-buttons\", \"reports__data-buttons--report-edit\", 3, \"click\"], [\"displayReport\", \"\"], [\"editReport\", \"\"], [4, \"ngIf\"], [\"disabled\", \"\", 3, \"selected\"], [\"inputSingle\", \"\"], [\"inputArea\", \"\"], [1, \"reports__input\", \"reports__input--text\", \"reports__input--table\", 3, \"value\", \"keyup.enter\", \"blur\"], [1, \"reports__input\", \"reports__input--textarea\", \"reports__input--table\", 3, \"keyup.enter\", \"blur\"], [1, \"tooltipped\", 3, \"click\"], [1, \"reports__input\", \"reports__input--textarea\", 3, \"blur\"]],\n    template: function EditReportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, EditReportComponent_div_1_Template, 2, 0, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6, \"Reports Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function EditReportComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.report.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵelementStart(11, \"select\", 8);\n        i0.ɵɵlistener(\"change\", function EditReportComponent_Template_select_change_11_listener($event) {\n          return ctx.loadTemplate($event.target.value);\n        });\n        i0.ɵɵelementStart(12, \"option\", 9);\n        i0.ɵɵtext(13, \"Select a Template\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, EditReportComponent_option_14_Template, 2, 3, \"option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 4);\n        i0.ɵɵelementStart(16, \"div\", 11);\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementStart(18, \"label\", 13);\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵtext(20, \"Add Students...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 15);\n        i0.ɵɵtext(22, \"\\u27A4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 16);\n        i0.ɵɵtemplate(24, EditReportComponent_div_24_Template, 4, 3, \"div\", 17);\n        i0.ɵɵelementStart(25, \"div\", 18);\n        i0.ɵɵelementStart(26, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function EditReportComponent_Template_button_click_26_listener() {\n          return ctx.loadGroupsFromSelection();\n        });\n        i0.ɵɵtext(27, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 20);\n        i0.ɵɵtemplate(29, EditReportComponent_button_29_Template, 2, 2, \"button\", 21);\n        i0.ɵɵtemplate(30, EditReportComponent_button_30_Template, 2, 2, \"button\", 22);\n        i0.ɵɵelementStart(31, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function EditReportComponent_Template_button_click_31_listener() {\n          return ctx.generateReports();\n        });\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, EditReportComponent_div_33_Template, 1, 0, \"div\", 24);\n        i0.ɵɵelementStart(34, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function EditReportComponent_Template_button_click_34_listener() {\n          return ctx.printReportObject();\n        });\n        i0.ɵɵtext(35, \"Print report object\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, EditReportComponent_div_36_Template, 1, 0, \"div\", 24);\n        i0.ɵɵelementStart(37, \"div\", 26);\n        i0.ɵɵtemplate(38, EditReportComponent_div_38_Template, 2, 0, \"div\", 27);\n        i0.ɵɵtemplate(39, EditReportComponent_div_39_Template, 2, 0, \"div\", 27);\n        i0.ɵɵtemplate(40, EditReportComponent_div_40_Template, 2, 0, \"div\", 27);\n        i0.ɵɵtemplate(41, EditReportComponent_div_41_Template, 2, 1, \"div\", 28);\n        i0.ɵɵtemplate(42, EditReportComponent_div_42_Template, 2, 1, \"div\", 28);\n        i0.ɵɵtemplate(43, EditReportComponent_div_43_Template, 2, 1, \"div\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(44, EditReportComponent_div_44_Template, 1, 0, \"div\", 29);\n        i0.ɵɵelementStart(45, \"div\", 30);\n        i0.ɵɵtemplate(46, EditReportComponent_table_46_Template, 24, 2, \"table\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.report.name);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.templates);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groups);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.groupsSelected.length === 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.reportSaved);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.reportSaved);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.reportGenerationReady);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.reportGenerationReady ? \"Generate Reports\" : \"Generate Reports\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showGlobals() || ctx.showVariables() || ctx.showTests());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showGlobals() || ctx.showVariables() || ctx.showTests());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showVariables());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showGlobals());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTests());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showVariables());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showGlobals());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showTests());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showGlobals() || ctx.showVariables() || ctx.showTests());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.report.reports.length > 0);\n      }\n    },\n    directives: [i8.NgIf, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgModel, i9.NgSelectOption, i9.ɵNgSelectMultipleOption, i8.NgForOf, i10.LoadingSpinnerComponent],\n    styles: [\".reports__settings[_ngcontent-%COMP%]{display:flex;align-items:baseline;justify-content:space-between;font-size:1.4rem;padding:.5rem 2rem}.reports__settings--flex[_ngcontent-%COMP%]{display:flex}.reports__settings--setting[_ngcontent-%COMP%]{display:flex;align-items:baseline}.reports__settings--setting[_ngcontent-%COMP%]:not(:last-of-type){margin-right:2rem}.reports__settings--text[_ngcontent-%COMP%]{font-weight:bold;margin-right:1rem}.reports__settings--input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%}.reports__variable-section[_ngcontent-%COMP%]{display:grid;grid-template:max-content 1fr/repeat(2,minmax(20rem,43rem)) minmax(43rem,43rem);justify-content:center;grid-row-gap:.5rem;row-gap:.5rem;grid-column-gap:1rem;column-gap:1rem;margin-top:1rem}.reports__variable-column[_ngcontent-%COMP%]{flex:1;border-radius:1rem;padding:.5rem 1rem 0;background-color:#ffffff1a}.reports__variable[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:.5rem}.reports__variable--description[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-size:1.2rem;font-style:italic;text-align:justify;padding-bottom:.7rem;margin-bottom:.5rem;border-bottom:2px solid rgba(0,0,0,.1)}.reports__variable--convert-button[_ngcontent-%COMP%]{padding:.2rem .7rem;border-radius:.5rem;box-shadow:0 .2rem .4rem #00000080;display:flex;align-self:center;justify-content:center;background-color:var(--color-style-main);transition:all .2s;font-size:1.4rem;border:.2rem solid transparent}.reports__variable--convert-button[_ngcontent-%COMP%]:hover{cursor:pointer;color:#fff;border:.2rem solid white;box-shadow:0 .4rem .6rem #000000b3;background-color:var(--color-style-juxtapose)}.reports__variable--name[_ngcontent-%COMP%]{font-size:1.2rem}.reports__variable--options[_ngcontent-%COMP%]{margin-top:.3rem;text-align:right}.reports__variable--multirow[_ngcontent-%COMP%]{display:flex;flex-direction:column}.reports__variable--multirow[_ngcontent-%COMP%]:not(:last-of-type){margin-right:.3rem}.reports__variable[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .reports__variable[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{max-width:25rem;font-size:1.2rem;padding:.5rem 1rem;margin-left:auto;margin-right:1rem}.reports__key[_ngcontent-%COMP%]:hover{text-decoration:underline;cursor:pointer}.reports__database-buttons[_ngcontent-%COMP%]{display:flex;justify-self:flex-end}.reports__input[_ngcontent-%COMP%]{padding:.8rem 2rem;background-color:#fff;border-radius:1rem 2rem;box-shadow:0 .2rem .4rem #0006;font-size:1.4rem}.reports__input--select[_ngcontent-%COMP%]{align-items:center}.reports__input--text[_ngcontent-%COMP%]{letter-spacing:.3rem}.reports__input--textarea[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:0;letter-spacing:.15rem}.reports__input--table[_ngcontent-%COMP%]{width:100%;padding:.3rem 1rem;background-color:#fff3}.reports__button[_ngcontent-%COMP%]{padding:.8rem 1.6rem;border-radius:1rem 2rem;transition:all .2s;border:.2rem solid transparent;text-align:center;font-size:1.4rem;background-color:var(--color-style-main)}.reports__button[_ngcontent-%COMP%]:not(:last-of-type){margin-right:.5rem}.reports__button[_ngcontent-%COMP%]:hover:not(:disabled){cursor:pointer;background-color:var(--color-style-juxtapose);color:#fff;border:.2rem solid white;box-shadow:0 .3rem .6rem #0000004d;transform:translateY(-.3rem)}.reports__data-buttons[_ngcontent-%COMP%]{transition:all .2s;border:.2rem solid transparent;text-align:center;margin:0;width:2.6rem;font-size:1.1rem;padding:.25rem .7rem}.reports__data-buttons[_ngcontent-%COMP%]:hover{cursor:pointer;border:.2rem solid white;filter:brightness(130%)}.reports__data-buttons[_ngcontent-%COMP%]:first-of-type{border-radius:.8rem .8rem 0 0}.reports__data-buttons[_ngcontent-%COMP%]:last-of-type{border-radius:0 0 .8rem .8rem}.reports__data-buttons[_ngcontent-%COMP%]:only-of-type{border-radius:1rem}.reports__data-buttons--delete[_ngcontent-%COMP%]{background-color:red}.reports__data-buttons--populate[_ngcontent-%COMP%]{background-color:orange}.reports__data-buttons--hide[_ngcontent-%COMP%], .reports__data-buttons--show[_ngcontent-%COMP%]{background-color:green}.reports__data-buttons--move[_ngcontent-%COMP%]{background-color:violet}.reports__data-buttons--move[_ngcontent-%COMP%]:hover{cursor:move}.reports__data-buttons--report-delete[_ngcontent-%COMP%]{margin-top:1rem;background-color:red}.reports__data-buttons--report-regenerate[_ngcontent-%COMP%]{background-color:green}.reports__data-buttons--report-edit[_ngcontent-%COMP%]{background-color:violet}.reports__data-buttons--report-save[_ngcontent-%COMP%]{background-color:orange}.reports__data-buttons--collapse-all[_ngcontent-%COMP%]{background-color:green}.reports__data-buttons--show-all[_ngcontent-%COMP%]{background-color:orange}.reports__data[_ngcontent-%COMP%]{margin-top:1rem;padding-top:1rem;font-size:1.4rem;max-width:100%}.reports__data--table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;position:relative}.reports__data--table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{position:sticky;top:-1px;z-index:99}.reports__data--table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-of-type(odd), .reports__data--table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-of-type(odd){background-color:#fff3}.reports__data--row[_ngcontent-%COMP%]{transition:all .2s}.reports__data--row[_ngcontent-%COMP%]:hover{background-color:var(--color-style-juxtapose)}.reports__data--header[_ngcontent-%COMP%]{font-weight:bold;background-color:green;background-color:var(--color-style-dark);color:#fff}.reports__data--data[_ngcontent-%COMP%]{background-color:var(--color-style-main)}.reports__data--cell-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.reports__data--cell-header-buttons[_ngcontent-%COMP%]{display:grid;grid-template:3rem/3rem;grid-auto-rows:3rem;margin:auto 1rem auto -.2rem}.reports__data--cell-header-detail[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;justify-content:center}.reports__data--cell-header--dragging[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0;background-color:#ffffff4d;border:1px dashed black}.reports__data--cell-header--dragover[_ngcontent-%COMP%]{background-color:#ffffff80}.reports__data--cell[_ngcontent-%COMP%]{padding:.5rem 1rem;transition:all .2s;text-align:center;position:relative}.reports__data--cell--header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.reports__data--cell[_ngcontent-%COMP%]:focus{background-color:#ffffff80;font-weight:bold;animation:glow 2s ease-in-out 0 infinite}.reports__data--cell[_ngcontent-%COMP%]:visited{background-color:red}.reports__data--cell--hidden[_ngcontent-%COMP%]{font-size:1.2rem;width:6rem}.reports__data--add-student[_ngcontent-%COMP%]{transition:all .4s}.reports__data--add-student[_ngcontent-%COMP%]:hover{cursor:pointer;letter-spacing:.3rem}.reports__data--report[_ngcontent-%COMP%]{text-align:left;cursor:copy}.reports__data--report-options[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center}.reports__data--buttons[_ngcontent-%COMP%]{padding:.1rem .5rem;font-size:1.6rem;transition:all .2s;border:.2rem solid transparent;width:3rem;text-align:center;border-radius:1rem}.reports__data--buttons[_ngcontent-%COMP%]:hover{cursor:pointer;border:.2rem solid white;filter:brightness(130%)}.reports__data--buttons-remove[_ngcontent-%COMP%]{background-color:red}.reports__data--buttons-addcol[_ngcontent-%COMP%]{background-color:green}.reports__data--prepopulate[_ngcontent-%COMP%]{width:12rem;text-align:left;font-size:1.2rem;font-weight:normal}.reports__data--prepopulate-text[_ngcontent-%COMP%]{text-decoration:underline;margin-bottom:.2rem}.reports__data--prepopulate[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .reports__data--prepopulate[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{margin-bottom:.1rem}.reports__key-variable-link[_ngcontent-%COMP%]{display:flex;align-items:baseline}.reports__key-variable-link--link-variable[_ngcontent-%COMP%], .reports__key-variable-link--link-test[_ngcontent-%COMP%]{border-radius:.5rem;padding:.2rem .5rem;transition:all .2s;font-weight:initial;font-size:1.2rem;border:1px solid transparent;margin-top:.3rem;margin-left:.2rem}.reports__key-variable-link--link-variable[_ngcontent-%COMP%]:hover, .reports__key-variable-link--link-test[_ngcontent-%COMP%]:hover{border:1px solid black;cursor:not-allowed}.reports__key-variable-link--link-variable[_ngcontent-%COMP%]{background-color:var(--color-style-juxtapose)}.reports__key-variable-link--link-variable[_ngcontent-%COMP%]:hover{background-color:var(--color-style-main);color:var(--color-style-juxtapose)}.reports__key-variable-link--link-test[_ngcontent-%COMP%]{background-color:var(--color-style-main);color:var(--color-style-juxtapose)}.reports__key-variable-link--link-test[_ngcontent-%COMP%]:hover{background-color:var(--color-style-juxtapose);color:var(--color-style-main)}.reports__key-variable-link--flexbox[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;justify-content:flex-end}.reports__key-variable-link--flexbox[_ngcontent-%COMP%]:first-child{margin-bottom:.2rem}.input__test[_ngcontent-%COMP%]{padding:.5rem 1rem;margin:-.5rem -1rem;width:100%}.multi-select-dropdown[_ngcontent-%COMP%]{position:relative;width:20rem;z-index:50000}.multi-select-dropdown[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:none;transition:all .2s}.multi-select-dropdown[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked ~ .multi-select-dropdown__element[_ngcontent-%COMP%]{display:block}.multi-select-dropdown[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + .multi-select-dropdown__selector[_ngcontent-%COMP%]{border-radius:1rem 2rem 0 0}.multi-select-dropdown[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked + .multi-select-dropdown__selector[_ngcontent-%COMP%] > .multi-select-dropdown__selector--arrow[_ngcontent-%COMP%]{transform:rotate(-90deg)}.multi-select-dropdown__selector[_ngcontent-%COMP%]{display:flex;justify-content:right;padding:.7rem 2rem;background-color:#fff;border-radius:1rem 2rem;box-shadow:0 .2rem .4rem #0006;-webkit-user-select:none;user-select:none}.multi-select-dropdown__selector--text[_ngcontent-%COMP%]{flex:1;font-size:1.4rem}.multi-select-dropdown__selector--arrow[_ngcontent-%COMP%]{transform:rotate(90deg);transform-origin:center;text-align:center}.multi-select-dropdown__selector[_ngcontent-%COMP%]:hover{cursor:pointer;box-shadow:0 .3rem .6rem #0009}.multi-select-dropdown__element[_ngcontent-%COMP%]{display:none;max-height:0;transition:all .2s}.multi-select-dropdown__option[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;width:20rem;background-color:#fff;padding:1rem 2rem;border:.1rem solid rgba(0,0,0,.1)}.multi-select-dropdown__option[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{display:block;justify-self:flex-start;transform:translate(-.7rem)}.multi-select-dropdown__option[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{justify-self:flex-end;align-self:flex-end;width:100%}.multi-select-dropdown__option[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{flex:1;font-size:1.4rem;justify-self:flex-end;text-align:right}.multi-select-dropdown__option[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:hover{cursor:pointer}.multi-select-dropdown__option[_ngcontent-%COMP%]:last-of-type{border-radius:0 0 1rem 2rem}.multi-select-dropdown__option[_ngcontent-%COMP%]:hover{filter:brightness(1.1)}\"]\n  });\n  return EditReportComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}