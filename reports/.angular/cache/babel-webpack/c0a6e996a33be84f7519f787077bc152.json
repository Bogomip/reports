{"ast":null,"code":"import { map, mergeMap, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/utilities/authentication/authentication.service\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/fire/compat/functions\";\nimport * as i4 from \"src/app/admin/services/console.service\";\nimport * as i5 from \"@angular/common\";\n\nfunction AdminUsersComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminUsersComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AdminUsersComponent_div_16_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.listUsers();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.loadingMessage, \" \");\n  }\n}\n\nfunction AdminUsersComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵtext(6, \"Last Payment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 9);\n    i0.ɵɵelementStart(8, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function AdminUsersComponent_div_17_Template_div_click_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.modifyAdminStatus(user_r5.email, user_r5.admin, $event);\n    });\n    i0.ɵɵtext(9, \"Admin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function AdminUsersComponent_div_17_Template_div_click_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.modifyManagerStatus(user_r5.email, user_r5.manager, $event);\n    });\n    i0.ɵɵtext(11, \"Manager\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function AdminUsersComponent_div_17_Template_div_click_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.modifyMemberStatus(user_r5.email, $event);\n    });\n    i0.ɵɵtext(13, \"Member\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r5.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"users-list__control--enabled\", user_r5.admin === true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"users-list__control--enabled\", user_r5.manager === true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"users-list__control--enabled\", user_r5.member === true);\n  }\n}\n\nexport let AdminUsersComponent = /*#__PURE__*/(() => {\n  class AdminUsersComponent {\n    constructor(auth, firebase, fFunctions, console) {\n      this.auth = auth;\n      this.firebase = firebase;\n      this.fFunctions = fFunctions;\n      this.console = console;\n    }\n\n    ngOnInit() {\n      // subscribe to the user authentication information.  \n      this.auth.user.subscribe(user => {\n        this.user = user;\n      }); // call the user list...\n\n      this.listUsers();\n    }\n\n    listUsers() {\n      var users = [];\n      this.loading = true;\n      this.firebase.collection('users').get().pipe(take(1)).subscribe(userData => {\n        userData.docs.forEach(user => {\n          users.push({\n            name: user.data().name,\n            email: user.data().email,\n            admin: user.data().admin ? true : false,\n            manager: user.data().manager ? true : false\n          });\n        });\n        this.loading = false;\n        this.loadingMessage = undefined;\n        this.fullUserList = users;\n        this.userList = users;\n      }, error => {\n        this.loadingMessage = `Error loading userlist: ${error.message} Click to retry...`;\n        this.loading = false;\n      });\n    }\n    /**\r\n     * Updates the users list based upon a search\r\n     * Not perfect right now as the main query takes only 100 records but fine for now.\r\n     * @param input the text input the search name and email for.\r\n     */\n\n\n    updateUsersList(input) {\n      if (input.length > 1) {\n        const keywords = input.split(\" \");\n        this.userList = this.fullUserList.filter(user => {\n          let result = false;\n          keywords.forEach(word => {\n            if (word.length > 1 && (user.email.includes(word) || user.name.includes(word))) {\n              result = true;\n            }\n          });\n          return result;\n        });\n      } else {\n        this.userList = this.fullUserList;\n      }\n    }\n\n    modifyUserData(userEmail, key, value) {\n      const obs = this.firebase.collection('users', ref => ref.where('email', '==', userEmail)).get();\n      return obs.pipe(take(1), map(result => {\n        result.docs.forEach(doc => {\n          this.firebase.collection('users').doc(doc.id).update({\n            [key]: value\n          });\n          this.console.addToLog(`Modified database: ${userEmail} has key '${key}' set to '${value}'.`); // update the arrays...\n\n          this.modifyUserLists(userEmail, key, value);\n        });\n      }));\n    }\n\n    modifyUserLists(userEmail, key, value) {\n      // run through the arrays twice to find the value. Emails only appear once so this can be broken when found.\n      // maybe not perfect, but good enough for the small use case.\n      // the full user list\n      let fullUserList = this.fullUserList;\n      let userList = this.userList;\n\n      for (let i = 0; i < fullUserList.length; i++) {\n        if (fullUserList[i].email === userEmail) {\n          fullUserList[i][key] = value;\n          this.fullUserList = fullUserList;\n          break;\n        }\n      } // and the visible user list\n\n\n      for (let i = 0; i < userList.length; i++) {\n        if (userList[i].email === userEmail) {\n          userList[i][key] = value;\n          this.userList = userList;\n          break;\n        }\n      }\n    }\n    /**\r\n     * Modify the status of the admin - toggle function\r\n     *\r\n     * @param email the email of the user to change\r\n     * @param currentStatus true or false\r\n     * @param button the button clicked on the page\r\n     */\n\n\n    modifyAdminStatus(email, currentStatus, button) {\n      let obs;\n      button.target.innerHTML = \"Working...\"; // set the observable based upon the current status\n\n      if (currentStatus === true) {\n        obs = this.removeAdmin(email);\n      } else {\n        obs = this.addAdmin(email);\n      }\n\n      obs.subscribe(() => {\n        button.target.innerHTML = \"Admin\";\n      }, error => {\n        button.target.innerHTML = \"Admin\";\n        this.console.addToLog(`Failed to change the admin status of ${email} to ${!currentStatus}: ${error.message}`);\n      });\n    }\n    /**\r\n     * Modify the status of the admin - toggle function\r\n     *\r\n     * @param email the email of the user to change\r\n     * @param currentStatus true or false\r\n     * @param button the button clicked on the page\r\n     */\n\n\n    modifyManagerStatus(email, currentStatus, button) {\n      let obs;\n      button.target.innerHTML = \"Working...\"; // set the observable based upon the current status\n\n      if (currentStatus === true) {\n        obs = this.removeManager(email);\n      } else {\n        obs = this.addManager(email);\n      }\n\n      obs.subscribe(() => {\n        button.target.innerHTML = \"Manager\";\n      }, error => {\n        button.target.innerHTML = \"Manager\";\n        this.console.addToLog(`Failed to change the manager status of ${email} to ${!currentStatus}: ${error.message}`);\n      });\n    }\n\n    addAdmin(email) {\n      const addAdminRole = this.fFunctions.httpsCallable('addAdminRole'); // add the email to the admin list\n\n      return addAdminRole({\n        email: email\n      }).pipe(take(1), mergeMap(() => {\n        return this.modifyUserData(email, 'admin', true);\n      }));\n    }\n\n    removeAdmin(email) {\n      const removeAdminRole = this.fFunctions.httpsCallable('removeAdminRole'); // add the email to the admin list\n\n      return removeAdminRole({\n        email: email\n      }).pipe(take(1), mergeMap(() => {\n        return this.modifyUserData(email, 'admin', false);\n      }));\n    }\n\n    addManager(email) {\n      const addManagerRole = this.fFunctions.httpsCallable('addManagerRole'); // add the email to the manager list\n\n      return addManagerRole({\n        email: email\n      }).pipe(take(1), mergeMap(() => {\n        return this.modifyUserData(email, 'manager', true);\n      }));\n    }\n\n    removeManager(email) {\n      const removeManagerRole = this.fFunctions.httpsCallable('removeManagerRole'); // remove the email from the manager list\n\n      return removeManagerRole({\n        email: email\n      }).pipe(take(1), mergeMap(() => {\n        return this.modifyUserData(email, 'manager', false);\n      }));\n    }\n\n  }\n\n  AdminUsersComponent.ɵfac = function AdminUsersComponent_Factory(t) {\n    return new (t || AdminUsersComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.AngularFirestore), i0.ɵɵdirectiveInject(i3.AngularFireFunctions), i0.ɵɵdirectiveInject(i4.ConsoleService));\n  };\n\n  AdminUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminUsersComponent,\n    selectors: [[\"app-admin-users\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"component-intro\"], [1, \"component-intro__description\"], [1, \"users-search\"], [1, \"users-search__text\"], [\"type\", \"text\", 1, \"users-search__search\", 3, \"disabled\", \"input\"], [1, \"users-list\"], [1, \"users-list__header\"], [1, \"users-list__name\"], [1, \"users-list__email\"], [1, \"users-list__controls\"], [\"class\", \"users-list__loading\", 4, \"ngIf\"], [\"class\", \"users-list__loading users-list__error\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"users-list__user\", 4, \"ngFor\", \"ngForOf\"], [1, \"users-list__loading\"], [1, \"users-list__loading\", \"users-list__error\", 3, \"click\"], [1, \"users-list__user\"], [1, \"users-list__paid-until\"], [1, \"users-list__control\", 3, \"click\"]],\n    template: function AdminUsersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵtext(2, \" This is where you can alter the status of any of the users in the system. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtext(5, \"Filter by name or email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"input\", function AdminUsersComponent_Template_input_input_6_listener($event) {\n          return ctx.updateUsersList($event.target.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtext(10, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵtext(12, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵtext(14, \"Permissions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, AdminUsersComponent_div_15_Template, 2, 0, \"div\", 10);\n        i0.ɵɵtemplate(16, AdminUsersComponent_div_16_Template, 2, 1, \"div\", 11);\n        i0.ɵɵtemplate(17, AdminUsersComponent_div_17_Template, 14, 8, \"div\", 12);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingMessage && !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      }\n    },\n    directives: [i5.NgIf, i5.NgForOf],\n    styles: [\".users-search[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;margin-bottom:1rem}.users-search__text[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:1.6rem;margin-right:1rem;font-weight:bold}.users-search__search[_ngcontent-%COMP%]{border-radius:1rem;font-size:1.6rem;padding:.5rem 8rem .5rem 1rem;letter-spacing:.2rem;width:30rem}.users-list[_ngcontent-%COMP%]{display:flex;flex-direction:column;font-size:1.6rem}.users-list__header[_ngcontent-%COMP%], .users-list__user[_ngcontent-%COMP%], .users-list__loading[_ngcontent-%COMP%]{display:flex;align-items:center;padding:.2rem}.users-list__loading[_ngcontent-%COMP%]{background-color:var(--color-style-dark);padding:2rem 4rem}.users-list__error[_ngcontent-%COMP%]{color:var(--color-style-juxtapose);transition:all .2s}.users-list__error[_ngcontent-%COMP%]:hover{cursor:pointer;color:#fff}.users-list__name[_ngcontent-%COMP%]{flex:1;padding:.5rem 1rem}.users-list__email[_ngcontent-%COMP%]{flex:1;padding:.5rem 1rem}.users-list__controls[_ngcontent-%COMP%]{text-align:center;padding:.5rem 1rem;display:flex;justify-content:center;flex:1}.users-list__header[_ngcontent-%COMP%]{border-radius:1rem 1rem 0 0;background-color:gray;font-weight:bold}.users-list__user[_ngcontent-%COMP%]{background-color:var(--color-style-dark);transition:all .2s}.users-list__user[_ngcontent-%COMP%]:last-of-type{border-radius:0 0 1rem 1rem}.users-list__user[_ngcontent-%COMP%]:hover{background-color:var(--color-style-juxtapose)}.users-list__control[_ngcontent-%COMP%]{padding:.5rem 1rem;border-radius:1rem;transition:all .2s;background-color:var(--color-style-main)}.users-list__control[_ngcontent-%COMP%]:not(:last-child){margin-right:.5rem}.users-list__control[_ngcontent-%COMP%]:hover{color:var(--color-style-main);background-color:var(--color-style-dark);cursor:pointer}.users-list__control--enabled[_ngcontent-%COMP%]{background-color:var(--color-style-juxtapose)}\"]\n  });\n  return AdminUsersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}