{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./authentication.service\";\nimport * as i2 from \"@angular/router\";\nexport let AdminGuard = /*#__PURE__*/(() => {\n  class AdminGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n\n    canActivate(next, state) {\n      return this.authService.user.pipe(take(1), map(user => {\n        // if the user is a member, manager or admin this is allowed...\n        const permission = user.admin;\n\n        if (permission) {\n          return true;\n        } // if the route is not allowed redirect to the dashboard page...\n\n\n        return this.router.createUrlTree(['/dashboard']);\n      }));\n    }\n\n  }\n\n  AdminGuard.ɵfac = function AdminGuard_Factory(t) {\n    return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.Router));\n  };\n\n  AdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminGuard,\n    factory: AdminGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AdminGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}