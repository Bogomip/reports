{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/templates.service\";\nimport * as i2 from \"../utilities/authentication/authentication.service\";\n\nfunction TemplatesComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TemplatesComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"div\", 12);\n    i0.ɵɵtext(2, \" \\u268F \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const template_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"create-template/\", template_r3.id, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", template_r3.name, \" \");\n  }\n}\n\nfunction TemplatesComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n}\n\nexport let TemplatesComponent = /*#__PURE__*/(() => {\n  class TemplatesComponent {\n    constructor(templateService, auth) {\n      this.templateService = templateService;\n      this.auth = auth;\n      this.templates = [];\n      this.isLoading = false;\n    }\n\n    ngOnInit() {\n      this.isLoading = true; // get the user details and then the templates when this has loaded...\n\n      this.auth.user.subscribe(user => {\n        this.user = user; // once the user is loaded then data can be retrived\n\n        this.getTemplates();\n      }, error => {\n        console.log(`Error: ${error.message}`);\n        this.isLoading = false;\n      }); // subscribe to the templates service in case this is changed...    \n\n      this.templateService.menuData.subscribe(newData => {\n        const newId = this.templates.findIndex(element => element.id === newData.id); // if its new add it, if it was found then \n\n        if (newId !== -1) {\n          this.templateChanged(newData, newId);\n        } else {\n          this.templateAdded(newData);\n        }\n      }, error => {\n        console.log(`Error: ${error.message}`);\n      });\n    }\n    /**\r\n     * Get the templates from the database...\r\n     */\n\n\n    getTemplates() {\n      this.templateService.getTemplates().subscribe(templates => {\n        this.templates = templates;\n        this.isLoading = false;\n      }, error => {\n        console.log(`Error: ${error.message}`);\n        this.isLoading = false;\n      });\n    }\n\n    templateChanged(data, index) {\n      /** this.templates.forEach((template: Template, index: number) => {\r\n      //     if(template.id === data.id) {\r\n      //         // chnage the name...\r\n      //         template.name = data.name;\r\n      //         // remove if its been deleted;\r\n      //         if(data.deleted) {\r\n      //             this.templates.splice(index, 1);\r\n      //         }\r\n      //     }\r\n      // })\r\n      */\n      this.templates[index].name = data.name;\n\n      if (data.deleted) {\n        this.templates.splice(index, 1);\n      }\n    }\n\n    templateAdded(data) {\n      let newTemplate = {\n        id: data.id,\n        public: undefined,\n        name: data.name,\n        characters: {\n          min: undefined,\n          max: undefined\n        },\n        template: undefined\n      };\n      this.templates.push(newTemplate);\n    }\n\n  }\n\n  TemplatesComponent.ɵfac = function TemplatesComponent_Factory(t) {\n    return new (t || TemplatesComponent)(i0.ɵɵdirectiveInject(i1.TemplatesService), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n  };\n\n  TemplatesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TemplatesComponent,\n    selectors: [[\"app-templates\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"component-intro\"], [1, \"component-intro__title\"], [1, \"component-intro__description\"], [1, \"templates\"], [1, \"templates__list\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"templates__template-selector\", \"routerLinkActive\", \"templates__template-selector--selected\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"divider-line divider-line__thin u__margin-top--medium\", 4, \"ngIf\"], [\"routerLink\", \"create-template/\", 1, \"templates__template-create\", \"u__margin-top--medium\"], [1, \"templates__editor\"], [1, \"loading\"], [\"routerLinkActive\", \"templates__template-selector--selected\", 1, \"templates__template-selector\", 3, \"routerLink\"], [1, \"templates__template-selector--icon\"], [1, \"templates__template-selector--text\"], [1, \"divider-line\", \"divider-line__thin\", \"u__margin-top--medium\"]],\n    template: function TemplatesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Templates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h4\", 2);\n        i0.ɵɵtext(4, \" Templates are what you will use to set the style of a particular report. For example you might like an introduction, followed by something they have done well, and ending with an improvement they can make. Using templates you can very quickly set the style of multiple class reports. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"section\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵtemplate(7, TemplatesComponent_div_7_Template, 2, 0, \"div\", 5);\n        i0.ɵɵtemplate(8, TemplatesComponent_div_8_Template, 5, 2, \"div\", 6);\n        i0.ɵɵtemplate(9, TemplatesComponent_div_9_Template, 1, 0, \"div\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵtext(11, \"Create New Template\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelement(13, \"router-outlet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.templates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    styles: [\".templates[_ngcontent-%COMP%]{display:flex;margin-top:1rem}.templates__list[_ngcontent-%COMP%]{position:relative;min-height:15rem;flex:0 1 30rem;display:flex;flex-direction:column;justify-content:flex-start}.templates__template-selector[_ngcontent-%COMP%]{display:flex;font-size:1.6rem;padding:.1rem .8rem;background-color:var(--color-style-dark);color:var(--color-style-light);border-radius:.5rem;border:solid transparent .2rem;transition:all .2s}.templates__template-selector[_ngcontent-%COMP%]:hover{background-color:var(--color-style-juxtapose);color:var(--color-style-verydark);cursor:pointer}.templates__template-selector[_ngcontent-%COMP%]:not(:last-child){margin-bottom:.2rem}.templates__template-selector--icon[_ngcontent-%COMP%]{font-size:3rem}.templates__template-selector--text[_ngcontent-%COMP%]{margin-left:1rem;align-self:center}.templates__template-selector--selected[_ngcontent-%COMP%]{background-color:var(--color-style-juxtapose);color:var(--color-style-verydark);border:solid white .2rem}.templates__template-create[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;padding:1rem 2rem;font-size:1.6rem;background-color:var(--color-style-juxtapose);color:var(--color-style-verydark);border-radius:.5rem;transition:all .2s}.templates__template-create[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:var(--color-style-dark);color:var(--color-style-light)}.templates__editor[_ngcontent-%COMP%]{flex:1}\"]\n  });\n  return TemplatesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}