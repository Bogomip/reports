{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/database.service\";\n\nfunction AdminBugReportsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminBugReportsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function AdminBugReportsComponent_div_3_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.setCategory(-1);\n    });\n    i0.ɵɵtext(1, \"Show all reports\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"admin-bugs__category--selected\", ctx_r1.viewCategory === -1);\n  }\n}\n\nfunction AdminBugReportsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function AdminBugReportsComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const i_r10 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.setCategory(i_r10);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bug_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"admin-bugs__category--selected\", ctx_r2.viewCategory === i_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bug_r9.category, \" \");\n  }\n}\n\nfunction AdminBugReportsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"There are no \", ctx_r3.allReports ? \"reported\" : \"incompleted\", \" bugs, feature requests or communications!\");\n  }\n}\n\nfunction AdminBugReportsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵlistener(\"click\", function AdminBugReportsComponent_div_6_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.getIncompleteReports();\n    });\n    i0.ɵɵtext(2, \"Incompleted Reports\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function AdminBugReportsComponent_div_6_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.getAllReports();\n    });\n    i0.ɵɵtext(4, \"All Reports\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"admin-bugs__include-all--button--selected\", !ctx_r4.allReports);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"admin-bugs__include-all--button--selected\", ctx_r4.allReports);\n  }\n}\n\nfunction AdminBugReportsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminBugReportsComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction AdminBugReportsComponent_div_9_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵlistener(\"click\", function AdminBugReportsComponent_div_9_ng_template_2_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const report_r16 = i0.ɵɵnextContext().$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.getUserDetails(report_r16.user, report_r16.uniqueId);\n    });\n    i0.ɵɵtext(1, \"Retrieve user data\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AdminBugReportsComponent_div_9_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementStart(1, \"a\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const report_r16 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"mailto:\", report_r16.user.email, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(report_r16.user.name);\n  }\n}\n\nfunction AdminBugReportsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AdminBugReportsComponent_div_9_div_1_Template, 1, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, AdminBugReportsComponent_div_9_ng_template_2_Template, 2, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, AdminBugReportsComponent_div_9_ng_template_4_Template, 3, 2, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"div\", 19);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 20);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 21);\n    i0.ɵɵelementStart(12, \"div\", 22);\n    i0.ɵɵlistener(\"click\", function AdminBugReportsComponent_div_9_Template_div_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const report_r16 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.completeAction(report_r16.user, report_r16.date);\n    });\n    i0.ɵɵtext(13, \"\\u2713\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 23);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const report_r16 = ctx.$implicit;\n\n    const _r19 = i0.ɵɵreference(3);\n\n    const _r21 = i0.ɵɵreference(5);\n\n    i0.ɵɵclassProp(\"admin-bugs__report--addressed\", report_r16.addressed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", report_r16.user.name === undefined)(\"ngIfThen\", _r19)(\"ngIfElse\", _r21);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 8, report_r16.date, \"medium\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(report_r16.page);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", report_r16.report, \" \");\n  }\n}\n\nexport let AdminBugReportsComponent = /*#__PURE__*/(() => {\n  class AdminBugReportsComponent {\n    constructor(db) {\n      this.db = db;\n      this.bugs = [];\n      this.loadingData = false;\n      this.allReports = false;\n      this.viewCategory = -1;\n      this.downloadedUsers = [];\n    }\n\n    ngOnInit() {\n      this.getBugReports();\n    }\n\n    getBugReports(getAll = false) {\n      let dbQuery = getAll ? this.db.getAllBugReports() : this.db.getIncompletedBugReports();\n      this.bugs = [];\n      this.loadingData = true;\n      this.viewCategory = -1; // get the bugs from the databse and sort them into their categories to display...\n\n      dbQuery.subscribe(data => {\n        // check if there is anything at all\n        if (data.docs.length > 0) {\n          data.docs.forEach(document => {\n            // NB: https://stackoverflow.com/questions/5416920/timestamp-to-human-readable-format\n            let newReport = document.data(); // see if the user already exists in the downloaded database (download is on demand but persists)\n\n            let userIndex = this.downloadedUsers.findIndex(temp => temp.id === newReport.userid); /// create the newbug section\n\n            let newBug = {\n              uniqueId: document.id,\n              user: userIndex === -1 ? newReport.userid : this.downloadedUsers[userIndex],\n              date: newReport.timestamp,\n              page: newReport.page,\n              report: newReport.comment,\n              addressed: newReport.addressed ? newReport.addressed : false\n            }; // find out where it should be placed in the array..\n\n            let bugIndex = this.bugs.findIndex(temp => temp.category === newReport.category);\n\n            if (bugIndex !== -1) {\n              // already a bug of that type.\n              this.bugs[bugIndex].report.push(newBug);\n            } else {\n              // first bug of this type...\n              this.bugs.push({\n                category: newReport.category,\n                report: []\n              });\n              this.bugs[this.bugs.length - 1].report.push(newBug);\n            }\n          });\n        } // set loading data to false.\n\n\n        this.loadingData = false;\n      }, error => {\n        console.log(`Error retrieving data: ${error}`);\n        this.loadingData = false;\n      });\n    }\n\n    getAllReports() {\n      this.getBugReports(true);\n      this.allReports = true;\n    }\n\n    getIncompleteReports() {\n      this.getBugReports(false);\n      this.allReports = false;\n    }\n\n    setCategory(bugIndex) {\n      this.viewCategory = bugIndex;\n    }\n    /**\r\n     * Returns a date sorted array of reports based pon either the selected category or the whoe lots of them...\r\n     * @returns\r\n     */\n\n\n    getReportsToDisplay() {\n      let bugReports = [];\n\n      if (this.viewCategory !== -1) {\n        bugReports = this.bugs[this.viewCategory].report;\n      } else {\n        // join all the categories\n        this.bugs.forEach(reportSet => {\n          bugReports = [...bugReports, ...reportSet.report].flat();\n        }); // return\n      }\n\n      return bugReports.sort((a, b) => b.date - a.date);\n    }\n    /**\r\n     * Flag a bug in the database as either true or false - alternates the value.\r\n     * Then sets the look on the page.\r\n     * @param user\r\n     * @param date\r\n     */\n\n\n    completeAction(user, date) {\n      let reports = this.getReportsToDisplay();\n      let index = reports.findIndex(temp => temp.date === date && temp.user === user);\n\n      if (index !== -1) {\n        // modify the array and the database...\n        this.db.updateBugReport(reports[index].uniqueId, !reports[index].addressed).subscribe(() => {\n          reports[index].addressed = !reports[index].addressed;\n        }, error => {\n          console.log(`Error whilst changing status: ${error}`);\n        });\n      }\n    }\n    /**\r\n     * Gets the user details from the database and applies it to all bugs submitted by that person.\r\n     * @param userid\r\n     * @param id\r\n     */\n\n\n    getUserDetails(userid, id) {\n      // query the db for the user details...\n      this.db.getUserName(userid).subscribe(result => {\n        let user = result.data(); // update all reportd with the user id...\n\n        this.bugs.forEach(reportSet => {\n          reportSet.report.forEach(rep => {\n            if (rep.user === userid) {\n              rep.user = user;\n              rep.user['id'] = result.id;\n            }\n          });\n        }); // and update the downloadedUsers with this user if they dont already exist (which they shouldn't but in case...)\n\n        let found = this.downloadedUsers.find(temp => temp.id === userid);\n\n        if (!found) {\n          this.downloadedUsers.push(user);\n        }\n      });\n    }\n\n  }\n\n  AdminBugReportsComponent.ɵfac = function AdminBugReportsComponent_Factory(t) {\n    return new (t || AdminBugReportsComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService));\n  };\n\n  AdminBugReportsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminBugReportsComponent,\n    selectors: [[\"app-admin-bug-reports\"]],\n    decls: 10,\n    vars: 7,\n    consts: [[1, \"admin-bugs\"], [1, \"admin-bugs__categories\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"admin-bugs__category\", 3, \"admin-bugs__category--selected\", \"click\", 4, \"ngIf\"], [\"class\", \"admin-bugs__category\", 3, \"admin-bugs__category--selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"admin-bugs__none-active\", 4, \"ngIf\"], [\"class\", \"admin-bugs__include-all\", 4, \"ngIf\"], [1, \"admin-bugs__reports\"], [\"class\", \"admin-bugs__report\", 3, \"admin-bugs__report--addressed\", 4, \"ngFor\", \"ngForOf\"], [1, \"loading\"], [1, \"admin-bugs__category\", 3, \"click\"], [1, \"admin-bugs__none-active\"], [1, \"admin-bugs__include-all\"], [1, \"admin-bugs__include-all--button\", \"admin-bugs__include-all--all\", 3, \"click\"], [1, \"admin-bugs__include-all--button\", \"admin-bugs__include-all--incomplete\", 3, \"click\"], [1, \"admin-bugs__report\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"retrieveBlock\", \"\"], [\"datablock\", \"\"], [1, \"admin-bugs__report--date\"], [1, \"admin-bugs__report--page\"], [1, \"admin-bugs__report--flags\"], [1, \"admin-bugs__report--button\", \"admin-bugs__report--button--addressed\", 3, \"click\"], [1, \"admin-bugs__report--report\"], [1, \"admin-bugs__report--user\", 3, \"click\"], [1, \"admin-bugs__report--email\"], [3, \"href\"]],\n    template: function AdminBugReportsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, AdminBugReportsComponent_div_2_Template, 2, 0, \"div\", 2);\n        i0.ɵɵtemplate(3, AdminBugReportsComponent_div_3_Template, 2, 2, \"div\", 3);\n        i0.ɵɵtemplate(4, AdminBugReportsComponent_div_4_Template, 2, 3, \"div\", 4);\n        i0.ɵɵtemplate(5, AdminBugReportsComponent_div_5_Template, 2, 1, \"div\", 5);\n        i0.ɵɵtemplate(6, AdminBugReportsComponent_div_6_Template, 5, 4, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵtemplate(8, AdminBugReportsComponent_div_8_Template, 2, 0, \"div\", 2);\n        i0.ɵɵtemplate(9, AdminBugReportsComponent_div_9_Template, 16, 11, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bugs.length > 0 && !ctx.loadingData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.bugs);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bugs.length === 0 && !ctx.loadingData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getReportsToDisplay());\n      }\n    },\n    styles: [\".admin-bugs[_ngcontent-%COMP%]{margin:2rem;display:flex}.admin-bugs__none-active[_ngcontent-%COMP%]{font-size:1.4rem;text-align:justify}.admin-bugs__categories[_ngcontent-%COMP%]{position:relative;flex:0 0 20rem;display:flex;flex-direction:column}.admin-bugs__category[_ngcontent-%COMP%]{padding:1rem 2rem;background-color:var(--color-style-main);border-radius:1rem;transition:all .2s;border:.2rem solid transparent;margin-bottom:.8rem;font-size:1.6rem;text-align:center;box-shadow:0 .1rem .2rem #000}.admin-bugs__category[_ngcontent-%COMP%]:hover, .admin-bugs__category--selected[_ngcontent-%COMP%]{cursor:pointer;background-color:var(--color-style-juxtapose);border:.2rem solid white;color:#fff}.admin-bugs__category[_ngcontent-%COMP%]:hover{box-shadow:0 .2rem .4rem #000;transform:translateY(-.3rem)}.admin-bugs__category--selected[_ngcontent-%COMP%]{box-shadow:0 .1rem .2rem #000;font-weight:bold}.admin-bugs__include-all[_ngcontent-%COMP%]{display:flex;margin-top:1rem;border-top:.2rem solid rgba(0,0,0,.2);padding-top:1rem}.admin-bugs__include-all--button[_ngcontent-%COMP%]{padding:.5rem 2rem;background-color:var(--color-style-main);border-radius:1rem;transition:all .2s;border:.2rem solid transparent;margin-bottom:.8rem;font-size:1.2rem;text-align:center;box-shadow:0 .1rem .2rem #000}.admin-bugs__include-all--button[_ngcontent-%COMP%]:not(:last-of-type){margin-right:.5rem}.admin-bugs__include-all--button[_ngcontent-%COMP%]:hover, .admin-bugs__include-all--button--selected[_ngcontent-%COMP%]{cursor:pointer;background-color:var(--color-style-juxtapose);border:.2rem solid white;color:#fff}.admin-bugs__include-all--button[_ngcontent-%COMP%]:hover{box-shadow:0 .2rem .4rem #000;transform:translateY(-.3rem)}.admin-bugs__include-all--button--selected[_ngcontent-%COMP%]{box-shadow:0 .1rem .2rem #000;font-weight:bold}.admin-bugs__reports[_ngcontent-%COMP%]{flex:1;margin-left:2rem;position:relative;display:flex;flex-direction:column}.admin-bugs__report[_ngcontent-%COMP%]{display:grid;align-items:baseline;grid-template:min-content max-content/1fr repeat(3,max-content);padding:1rem 2rem;margin-bottom:.6rem;background-color:var(--color-style-main);grid-row-gap:.5rem;row-gap:.5rem;grid-column-gap:2rem;column-gap:2rem;font-size:1.4rem;border-radius:1rem;box-shadow:0 .1rem .2rem #000}.admin-bugs__report--addressed[_ngcontent-%COMP%]{background-color:var(--color-style-dark)}.admin-bugs__report--user[_ngcontent-%COMP%], .admin-bugs__report--email[_ngcontent-%COMP%]{grid-row:1/2;grid-column:1/2;transition:all .2s;color:#00f}.admin-bugs__report--user[_ngcontent-%COMP%]:hover{cursor:pointer;letter-spacing:.1rem}.admin-bugs__report--date[_ngcontent-%COMP%]{grid-row:1/2;grid-column:3/4;text-align:center}.admin-bugs__report--page[_ngcontent-%COMP%]{grid-row:1/2;grid-column:2/3;text-align:center}.admin-bugs__report--report[_ngcontent-%COMP%]{grid-row:2/3;grid-column:1/5;padding-top:1rem;border-top:.1rem solid rgba(0,0,0,.4)}.admin-bugs__report--button[_ngcontent-%COMP%]{padding:.2rem .6rem;border-radius:.2rem;border:.2rem solid transparent;font-size:1.2rem;transition:all .2s}.admin-bugs__report--button[_ngcontent-%COMP%]:hover{filter:brightness(1.2);cursor:pointer;border:.2rem solid black}.admin-bugs__report--button[_ngcontent-%COMP%]:not(:last-of-type){margin-right:.3rem}.admin-bugs__report--button--addressed[_ngcontent-%COMP%]{background-color:orange}.admin-bugs__report--flags[_ngcontent-%COMP%]{grid-row:1/2;grid-column:4/5}\"]\n  });\n  return AdminBugReportsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}